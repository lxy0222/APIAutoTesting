<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AugmentWebviewStateStore">
    <option name="stateMap">
      <map>
        <entry key="CHAT_STATE" value="{&quot;currentConversationId&quot;:&quot;bc197f7f-72e6-4a10-a1d6-fae0ec9bb021&quot;,&quot;conversations&quot;:{&quot;faf957de-00c4-4a3f-897f-ed4a1d27bd36&quot;:{&quot;id&quot;:&quot;faf957de-00c4-4a3f-897f-ed4a1d27bd36&quot;,&quot;createdAtIso&quot;:&quot;2025-06-13T04:00:20.020Z&quot;,&quot;lastInteractedAtIso&quot;:&quot;2025-06-18T08:40:57.350Z&quot;,&quot;chatHistory&quot;:[{&quot;request_id&quot;:&quot;63d96c1f-b32b-4b0b-b012-b7650fbb3016&quot;,&quot;uuid&quot;:&quot;f25c5240-d457-41da-90ea-44181085d6fb&quot;,&quot;chatItemType&quot;:&quot;agentic-checkpoint-delimiter&quot;,&quot;status&quot;:&quot;success&quot;,&quot;fromTimestamp&quot;:0,&quot;toTimestamp&quot;:1749787220020,&quot;seen_state&quot;:&quot;seen&quot;},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;ffacc6ff-577c-4362-a855-7d046d094c2a&quot;,&quot;request_message&quot;:&quot;帮我梳理这个项目，我面试可能会问到并给我出答案&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;帮我梳理这个项目，我面试可能会问到并给我出答案&quot;}]}]},&quot;mentioned_items&quot;:[],&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01Y9RyEnGDZ8ypMSvYejqWmA&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;.\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;我来帮你梳理这个项目，首先让我了解一下项目的整体结构和内容。\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;text_node&quot;:{&quot;content&quot;:&quot;帮我梳理这个项目，我面试可能会问到并给我出答案&quot;}},{&quot;id&quot;:1,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:00:36.451Z&quot;,&quot;response_text&quot;:&quot;我来帮你梳理这个项目，首先让我了解一下项目的整体结构和内容。\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;137466cf-3866-4006-96b7-1e1746bf7904&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01JJEq67pqTCPiqxiAp9Yh45&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;README.md\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;让我查看README文件了解项目概述：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in ., excluding hidden items:\n./PyDemo\n./PyDemo/__init__.py\n./PyDemo/__pycache__\n./PyDemo/data\n./PyDemo/method_collection\n./PyDemo/page\n./PyDemo/testcase\n./README.md\n./__pycache__\n./__pycache__/run_rf_case.cpython-37-pytest-6.2.5.pyc\n./__pycache__/run_rf_case.cpython-37-pytest-7.2.2.pyc\n./__pycache__/test.cpython-37-pytest-6.2.5.pyc\n./aaaaa.py\n./comm\n./comm/__init__.py\n./comm/__pycache__\n./comm/script\n./comm/unit\n./comm/utils\n./config\n./config/FunctionTemplate.py\n./config/__init__.py\n./config/__pycache__\n./config/apiConfig.yml\n./config/dbConfig.yml\n./config/runConfig.yml\n./config/test_template.py\n./data_warehouse\n./data_warehouse/download\n./data_warehouse/source\n./data_warehouse/upload\n./log.html\n./logs\n./logs/2023-05-16.log\n./logs/2023-05-16_error.log\n./logs/2023-05-17.log\n./logs/2023-05-17_error.log\n./logs/2023-05-22.log\n./logs/2023-05-22_error.log\n./logs/2023-05-23.log\n./logs/2023-05-23_error.log\n./logs/2023-05-24.log\n./logs/2023-05-24_error.log\n./logs/2023-05-30.log\n./logs/2023-05-30_error.log\n./logs/2023-06-05.log\n./logs/2023-06-05_error.log\n./logs/2023-06-06.log\n./logs/2023-06-06_error.log\n./logs/2023-06-07.log\n./logs/2023-06-07_error.log\n./logs/2023-06-08.log\n./logs/2023-06-08_error.log\n./logs/2023-06-09.log\n./logs/2023-06-09_error.log\n./logs/2023-07-05.log\n./logs/2023-07-05_error.log\n./output.xml\n./report\n./report.html\n./report/html\n./report/pushDing.py\n./report/xml\n./requirements.txt\n./startup.py\n./venv\n./venv/Lib\n./venv/Scripts\n./venv/include\n./venv/pyvenv.cfg\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01Y9RyEnGDZ8ypMSvYejqWmA&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:00:41.528Z&quot;,&quot;response_text&quot;:&quot;让我查看README文件了解项目概述：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;30e2f55f-4b73-458d-ad08-74f8217d9ef7&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01PEEnsXJqKjsbHuAqJzm9dB&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;config\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;现在让我查看项目的主要配置文件和核心代码结构：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on README.md:\n     1\t# 使用前准备：\n     2\t    1、安装配置python3.6版本及以上环境和pycharm\n     3\t        安装与配置可参考：https://blog.csdn.net/ling_mochen/article/details/79314118/\n     4\t    2、安装allure环境 并配置环境变量 （allure安装包在data_warehouse/source目录下）\n     5\t        安装与配置可参考：https://www.cnblogs.com/strive-2020/p/12630067.html\n     6\t    3、pip install -r requirements.txt \n     7\t    （安装不成功的进行单个手动添加，或者更换pip源：pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple）\n     8\t    4、去掉allure报告title后的参数化显示：文件位置：Lib\\site-packages\\allure_pytest\\listener.py （第三方包所在的LIb目录） \n     9\t    将test_result.parameters.extend(........) 中参数改成空列表就行了[],修改后-test_result.parameters.extend([])\n    10\t\n    11\t**此框架是基于Python3+pyTest+Requests+Allure+Yaml+Json实现全链路接口自动化测试。**\n    12\t\n    13\t# 主要流程：\n    14\t\n    15\t## 1）抓包的接口\n    16\t解析接口数据包 -&gt;生成接口基础配置(yml) -&gt;生成测试用例(yaml+json) -&gt;生成测试脚本(.py) -&gt;运行测试(pytest) -&gt;生成测试报告(allure)\n    17\t## 2）手工编写的接口用例\n    18\t手工根据规则编写测试用例(yaml+json) -&gt;生成测试脚本(.py) -&gt;运行测试(pytest) -&gt;生成测试报告(allure)\n    19\t\n    20\t# 测试流程：\n    21\t\n    22\t初始化请求 -&gt;处理接口基础信息 -&gt;读取前置接口用例 -&gt;发送前置接口 -&gt;处理当前接口数据 -&gt;发送当前接口 -&gt;检查接口返回\n    23\t\n    24\t# 接口自动化测试框架介绍：\n    25\t\n    26\t## 关于接口依赖：\n    27\t    支持前置接口预置，填写前置接口相对路径即可，如果存在数据依赖关系，此时你也仅需要填写前置接口对应的参数值，本框架将自动为你调用和替换关联数据。\n    28\t\t\t\t1、前置接口配置：\n    29\t\t\t\t  1）项目文件的page目录下有comeCase.yaml 公用测试用例文件，前置写这个文件类的接口时，配置： premise: /commonCase.yaml xxx接口 测试数据索引(从0开始);\n    30\t\t\t\t  2）也支持填写已有接口，从测试文件中去数据，配置：premise: /xxx/xxxx.yaml _ 测试数据索引(从0开始)\n    31\t\t\t\t2、前置接口数据依赖：\n    32\t\t\t\t  引用见下面---_关于参数化_\n    33\t\t\t\t3、test_info和case_data的premise优先级：\n    34\t\t\t\t    两个同时配置，优先case_data\n    35\t\n    36\t## 关于测试数据：\n    37\t    本框架采用yaml记录接口基本信息，当请求参数和结果较大时，将单独保存到json文件中，解决各类数据的错综复杂问题。\n    38\t\n    39\t## 关于参数化：\n    40\t    本框架采用常用工具使用的变量标识 ${var} ，通过正则表达式，自动检索变量，自动为你替换变量，并且为你提供多种函数助手【$RandInt()、$GenGuid()】等，生成一些随机的伪数据，解决各种数据问题。\n    41\t            参数引用：\n    42\t                1)前置接口的请求参数以及配置文件里的参数 ${xxx}\n    43\t                2)前置接口的响应参数\n    44\t                    response：{'code': 0, 'msg': 'OK', 'id': 100100, 'data': {'id': 127409, 'member_id': 1236921938, 'title': '新增一个项目', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2021-10-09 11:05:46.0', 'bidding_start_time': None, 'full_time': None, 'status': 1}, \n    45\t                    'copyright': 'Copyright © 2017-2020  All Rights Reserved', \n    46\t                    'parameter': {'member_id': '1236921938', 'title': '新增一个项目', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5}}\n    47\t                   例：要引用data下的id ${data_id} 以节点加_进行引用\n    48\t                       要引用无父节点的就直接${code}\n    49\t                3)数据库断言的时候不用遵循父节点的写法 直接${id} 如果遇到重复key只会引用第一个匹配的key，如果需要引用有父节点的可以联系我帮你修改一下\n    50\t## 关于自定义函数调用\n    51\t    以func_开头的自定义函数可进行传参调用，会自动进行查找，在函数体内需要返回调用结果\n    52\t    引用方法 param: func_xxx{\&quot;params1\&quot;:\&quot;参数一\&quot;,\&quot;params2\&quot;:\&quot;参数二\&quot;}   函数名和传入的参数之间不能用空格\n    53\t\n    54\t## 关于用例执行：\n    55\t    本框架利用pytest扩展库，支持多线程模式、失败用例重试、用例模糊匹配等。\n    56\t\n    57\t## 关于数据校验：本框架支持多种校验方式(5种)\n    58\t\t1） no_check：不做任何校验\n    59\t\t    例：\n    60\t              check_body:\n    61\t                check_type: no_check\n    62\t                expected_code: 200（随意写value也可空着，但key必须保留）\n    63\t                expected_result: 随意写value也可空着，但key必须保留\n    64\t\n    65\t\t2） check_code：仅校验接口返回码code\n    66\t\t    例：\n    67\t              check_body:\n    68\t                check_type: check_code\n    69\t                expected_code: 200\n    70\t                expected_result: 随意写value也可空着，但key必须保留\n    71\t\n    72\t\t3） check_json：校验接口返回码code，并进行json格式比较及校验返回结果（默认方式）\n    73\t\t    例：\n    74\t              check_body:\n    75\t                check_type: check_json\n    76\t                expected_code: 200\n    77\t                expected_result:\n    78\t                  - [\&quot;gt\&quot;, \&quot;code\&quot;, -1]\n    79\t                  - [\&quot;not_none\&quot;, \&quot;message\&quot;, \&quot;SUCCESS\&quot;]\n    80\t                  - [\&quot;!=\&quot;, \&quot;$..signatories\&quot;, 2]\n    81\t\n    82\t\t4） entirely_check：校验接口返回码code，并进行完整比较返回结果\n    83\t\t    例：\n    84\t              check_body:\n    85\t                check_type: entirely_check\n    86\t                expected_code: 200\n    87\t                expected_result: {'code': 0, 'msg': 'OK'}\n    88\t\n    89\t\t5） regular_check：校验接口返回码code，并进行正则匹配返回结果\n    90\t\t    例：\n    91\t              check_body:\n    92\t                check_type: regular_check\n    93\t                expected_code: 200\n    94\t                expected_result: \n    95\t                   - \&quot;'code': 0\&quot;\n    96\t                   - SUCCESS\n    97\t\t\n    98\t\t6） check_db：数据库校验\n    99\t\t    例：\n   100\t              check_db:\n   101\t                  - check_type: check_db\n   102\t                    execute_sql: SELECT * FROM loan WHERE id ='${id}'\n   103\t                    expected_result:\n   104\t                      - amount: ${amount}  （字段名和值）\n   105\t                    expected_num: 1  （查询结果行数校验）\n   106\t                    \n   107\t## 关于环境切换：\n   108\t    本框架支持环境切换，只需增加修改配置文件\n   109\t\t1）默认项目名称：PyDemo （用于大部分项目支持）\n   110\t\t2）如果有项目对断言以及用例修改校大，可以复制PyDemo项目，重新生成一个项目包，如：PyDemoFW ，没有复制新的项目包会默认使用PyDemo项目的数据\n   111\t\t3）修改配置：\n   112\t\t\t- apiConfig.yaml 【项目配置】 复制一份默认项目配置，在文件下粘贴，修改键名为你需要运行的项目名；\n   113\t\t\t- dbConfig.yaml 【数据库配置】同上\n   114\t\t\t- requestConfig.yaml 【处理后写入的数据键值对】同上 这里的值不需要去修改，运行项目时后自动修改，可根据需求，可不用此配置\n   115\t\t\t- runConfig.yaml 【运行配置】 对应修改项目名，其他内容按需修改\n   116\t\n   117\t\n   118\t# 运行配置说明：\n   119\t\n   120\t    运行项目名 project_name: PyDemo \n   121\t    \n   122\t    运行模式: auto_switch: 2\n   123\t    \n   124\t    0 - 不开启自动生成测试用例功能，将直接运行测试\n   125\t    \n   126\t    1 - 根据手工编写用例，自动生成测试脚本，然后运行测试\n   127\t    \n   128\t    2 - 根据接口抓包数据，自动生成测试用例和测试脚本，然后运行测试\n   129\t    \n   130\t    3 - 根据接口抓包数据，自动生成测试用例和测试脚本，但不运行测试\n   131\t    \n   132\t    注意：目前解析仅支持(.chlsj)格式，请使用Charles工具抓包导出JSON Session File\n   133\t    \n   134\t    扫描测试用例目录（且仅当auto_switch=1时有用） scan_dir:\n   135\t    \n   136\t    使用模糊匹配测试用例（空则匹配所有） pattern:\n   137\t    \n   138\t    执行并发线程数（0表示不开启） process: 0\n   139\t    \n   140\t    失败重试次数（0表示不重试） reruns: 0\n   141\t    \n   142\t    本轮测试最大允许失败数（超出则立即结束测试） maxfail: 20\n   143\t    \n   144\t    接口调用间隔时间（s） interval: 1\n   145\t\n   146\t\n   147\t--- \n   148\t---\n   149\t版权归 xuanyu liu 所有示例的接口仅做参考，不可进行压测并发调用\n   150\t\n   151\t\nTotal lines in file: 151\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01JJEq67pqTCPiqxiAp9Yh45&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:00:46.054Z&quot;,&quot;response_text&quot;:&quot;现在让我查看项目的主要配置文件和核心代码结构：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;152c4987-cec9-45b1-9abc-b88526a85072&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01Fgxb1Ln2NTm5xhFsFufK5D&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;config/runConfig.yml\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in config, excluding hidden items:\nconfig/FunctionTemplate.py\nconfig/__init__.py\nconfig/__pycache__\nconfig/__pycache__/__init__.cpython-37.pyc\nconfig/apiConfig.yml\nconfig/dbConfig.yml\nconfig/runConfig.yml\nconfig/test_template.py\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01PEEnsXJqKjsbHuAqJzm9dB&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:00:51.610Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;4407a460-9392-4591-8791-09b39a30bedf&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01Jk5x2kvYsEhD22YLD6TrDG&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;PyDemo\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on config/runConfig.yml:\n     1\t# Run project name\n     2\tproject_name: PyDemo\n     3\t\n     4\t# Running mode:\n     5\tauto_switch: 1\n     6\t# 0 - Do not enable automatic test case generation and run tests directly\n     7\t# 1 - Automatically generate test scripts based on manual use cases, and then run tests\n     8\t\n     9\t\n    10\t# Scan test case directory (useful only if auto_switch=1) (script re will be performed for use cases where no test script has been written)\n    11\tscan_dir: \&quot;\&quot;\n    12\t\n    13\t# Use fuzzy matching test cases (blank matches all)\n    14\tpattern: \&quot;Sync_portfolio_hierarchy_info_to_Octane_product_filed\&quot;\n    15\t\n    16\t# Number of concurrent threads executing (0 means disabled)\n    17\tprocess: 0\n    18\t\n    19\t# Number of failed retries (0 indicates no retries)\n    20\treruns: 0\n    21\t\n    22\t# Maximum number of failures allowed in the current round (if you exceed this number, end the test immediately)\n    23\tmaxfail: 200\n    24\t\n    25\t# Interface call interval (s)\n    26\tinterval: 1\n    27\t\n    28\t# skip the use case set . Such as: test_ContractCreateByCategory yaml this use case set, is included in the list below written [\&quot;TestContractCreateByCategory \&quot;] can skip multiple commas\n    29\tskip_classes:\n    30\t#  - TestBusinessgoalcreate\n    31\t\n    32\tskip_methods:\n    33\t#  {\&quot;TestBusinessgoalcreate\&quot;: [\&quot;test_ParentGoalWithPrivateKPI\&quot;]}\n    34\t\n    35\t\n    36\tDescription of verification methods of test results (there are 7 methods) :\n    37\t\n    38\t# no_check: no check is performed\n    39\t\n    40\t# check_code: indicates only the return code of the interface\n    41\t\n    42\t# check_json: indicates the return code of the check interface, and compares the return result with the json format (default).\n    43\t\n    44\t# entirely_check: Check interface return code, complete comparison return result\n    45\t\n    46\t# regular_check: The regular_check interface returns the code, and the regular_check interface returns the result\n    47\t\n    48\t# check_db: verifies the database\n    49\t\n    50\t# check_by_other_api:\n    51\t\nTotal lines in file: 51\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01Fgxb1Ln2NTm5xhFsFufK5D&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:00:57.940Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;7ea08e84-170d-40f2-8e1b-bba46979d4a9&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01SS3JTNpMhhDHMmSLDTv1P1&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;PyDemo/method_collection/Portfolio/Function.py\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;让我查看你提到的Portfolio/Function.py文件：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in PyDemo, excluding hidden items:\nPyDemo/__init__.py\nPyDemo/__pycache__\nPyDemo/__pycache__/__init__.cpython-37.pyc\nPyDemo/data\nPyDemo/data/login.chlsj\nPyDemo/method_collection\nPyDemo/method_collection/Business_Goal\nPyDemo/method_collection/Portfolio\nPyDemo/method_collection/SPM\nPyDemo/method_collection/UserManagement\nPyDemo/method_collection/What-if Analysis\nPyDemo/method_collection/__init__.py\nPyDemo/method_collection/__pycache__\nPyDemo/method_collection/contract\nPyDemo/method_collection/document\nPyDemo/method_collection/login\nPyDemo/method_collection/registerFunction.py\nPyDemo/page\nPyDemo/page/Business_Goal\nPyDemo/page/Portfolio\nPyDemo/page/SPM\nPyDemo/page/UserManagement\nPyDemo/page/What-if Analysis\nPyDemo/page/program\nPyDemo/page/proposal\nPyDemo/testcase\nPyDemo/testcase/Business_Goal\nPyDemo/testcase/Portfolio\nPyDemo/testcase/SPM\nPyDemo/testcase/UserManagement\nPyDemo/testcase/What-if Analysis\nPyDemo/testcase/__pycache__\nPyDemo/testcase/conftest.py\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01Jk5x2kvYsEhD22YLD6TrDG&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:02.494Z&quot;,&quot;response_text&quot;:&quot;让我查看你提到的Portfolio/Function.py文件：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;2488bf40-d926-46bc-989d-d02a645be18c&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_012Qt5MBNbgE2rn4kKJrJg95&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;startup.py\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;现在让我查看一些核心的配置文件和测试用例结构：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on PyDemo/method_collection/Portfolio/Function.py:\n     1\timport time\n     2\t\n     3\timport jsonpath\n     4\t\n     5\tfrom comm.script.writeLogs import logger\n     6\tfrom PyDemo.method_collection import request_in_a_function\n     7\tfrom comm.unit.GlobalVariable import GlobalData\n     8\tfrom comm.utils.SoapParser import xml_to_dict, SoapParser\n     9\tfrom comm.utils.databaseExecute import Database\n    10\tfrom comm.utils.randomly import *\n    11\tfrom config import PROJECT_NAME, AC\n    12\t\n    13\t\n    14\tdef func_demo_function_name(**kwargs):\n    15\t    # dicts are lists of information set as global variables\n    16\t    # {\&quot;name\&quot;: \&quot;Variable name\&quot;, \&quot;jsonpath\&quot;: \&quot;jsonpath expression\&quot;}\n    17\t    # tips: 1.You can also set global variables before executing the current function if necessary\n    18\t    #         setattr(GlobalData.local_data.namespace, \&quot;variable name\&quot;, \&quot;variable value\&quot;)\n    19\t    #       2.You can also modify the input keyword parameters(kwargs)\n    20\t    #         and then pass the parameters into request_in_a_function\n    21\t\n    22\t    dicts = [{\&quot;name\&quot;: \&quot;GD_userName\&quot;, \&quot;jsonpath\&quot;: \&quot;$..userName\&quot;},\n    23\t             {\&quot;name\&quot;: \&quot;GD_userId\&quot;, \&quot;jsonpath\&quot;: \&quot;$..userId\&quot;}]\n    24\t    request_in_a_function(r\&quot;UserManagement/User/test_user_add.yaml\&quot;, \&quot;UserAdd2\&quot;,\n    25\t                          \&quot;create_user_with_specified_license[PortfolioUser]_and_security_group\&quot;, dicts, **kwargs)\n    26\t\n    27\t\n    28\tdef create_data(hierarchy):\n    29\t    \&quot;\&quot;\&quot;\n    30\t    input_data = {\n    31\t        \&quot;type\&quot;: \&quot;portfolio\&quot;,\n    32\t        \&quot;name\&quot;: \&quot;ws_TOP_portfolio\&quot;,\n    33\t        \&quot;strategicThemes\&quot;: [\n    34\t            {\n    35\t                \&quot;name\&quot;: \&quot;Top_st\&quot;,\n    36\t                \&quot;parent\&quot;: \&quot;\&quot;,\n    37\t                \&quot;color\&quot;: \&quot;#6890CB\&quot;,\n    38\t                \&quot;children\&quot;: [],\n    39\t                \&quot;businessGoals\&quot;: []\n    40\t            }\n    41\t        ],\n    42\t        \&quot;children\&quot;: [\n    43\t            {\n    44\t                \&quot;type\&quot;: \&quot;portfolio\&quot;,\n    45\t                \&quot;name\&quot;: \&quot;ws_sub_portfolio1\&quot;,\n    46\t                \&quot;children\&quot;: [\n    47\t                    {\n    48\t                        \&quot;type\&quot;: \&quot;portfolio\&quot;,\n    49\t                        \&quot;name\&quot;: \&quot;ws_sub_sub_portfolio1\&quot;,\n    50\t                        \&quot;children\&quot;: []\n    51\t                    },\n    52\t                    {\n    53\t                        \&quot;type\&quot;: \&quot;proposal\&quot;,\n    54\t                        \&quot;name\&quot;: \&quot;nested_proposal\&quot;\n    55\t                    }\n    56\t                ]\n    57\t            },\n    58\t            {\n    59\t                \&quot;type\&quot;: \&quot;proposal\&quot;,\n    60\t                \&quot;name\&quot;: \&quot;ws_proposal\&quot;\n    61\t            },\n    62\t            {\n    63\t                \&quot;type\&quot;: \&quot;program\&quot;,\n    64\t                \&quot;name\&quot;: \&quot;ws_program\&quot;\n    65\t            }\n    66\t        ]\n    67\t    }\n    68\t    \&quot;\&quot;\&quot;\n    69\t    def create_node(name, type, parent):\n    70\t        node = {\n    71\t            \&quot;name\&quot;: name,\n    72\t            \&quot;type\&quot;: type,\n    73\t            \&quot;parent\&quot;: parent,\n    74\t            \&quot;children\&quot;: []\n    75\t        }\n    76\t        timestamp = generate_timestamp()\n    77\t        # 根据类型调用不同的接口\n    78\t        if node[\&quot;type\&quot;] == \&quot;portfolio\&quot;:\n    79\t            dicts = [{\&quot;name\&quot;: f\&quot;GD_{name}_name\&quot;, \&quot;jsonpath\&quot;: \&quot;$..name\&quot;},\n    80\t                     {\&quot;name\&quot;: f\&quot;GD_{name}_id\&quot;, \&quot;jsonpath\&quot;: \&quot;$..id\&quot;}]\n    81\t            code, data = request_in_a_function(r\&quot;/Portfolio/test_portfolio_create.yaml\&quot;, \&quot;Create a portfolio\&quot;,\n    82\t                                  \&quot;create portfolio\&quot;, setGloable=dicts, name=name+str(timestamp))\n    83\t\n    84\t            if parent is not None:\n    85\t                code, data = request_in_a_function(r\&quot;/Portfolio/PortfolioContent/test_content_add.yaml\&quot;,\n    86\t                                                   \&quot;Add a sub-portfolio to portfolio\&quot;, f\&quot;Add \&quot;, usePremise=False,\n    87\t                                                   new_path=\&quot;/itg/rest2/portfolios/${\&quot; + f\&quot;GD_{parent['name']}_id\&quot; + \&quot;}/contents/subPortfolios\&quot;,\n    88\t                                                   childPortfolioId=data[\&quot;data\&quot;]['id'])\n    89\t        # 调用与portfolio相关的接口\n    90\t        # ...\n    91\t        elif node[\&quot;type\&quot;] == \&quot;proposal\&quot;:\n    92\t            dicts = [{\&quot;name\&quot;: f\&quot;GD_{name}_name\&quot;, \&quot;jsonpath\&quot;: \&quot;$..name\&quot;},\n    93\t                     {\&quot;name\&quot;: f\&quot;GD_{name}_id\&quot;, \&quot;jsonpath\&quot;: \&quot;$..id\&quot;}]\n    94\t            code, data = request_in_a_function(r\&quot;/proposal/proposal_create.yaml\&quot;, \&quot;Create a proposal\&quot;,\n    95\t                                  \&quot;create proposal\&quot;, setGloable=dicts, kwargs={\&quot;$..*[?(@.token=='REQ.DESCRIPTION')].stringValue\&quot;:name+str(timestamp),\n    96\t                                                                               \&quot;$..*[?(@.token=='REQ.KNTA_PROJECT_NAME')].stringValue\&quot;:name+str(timestamp)})\n    97\t            # # 进行与parent关联的操作\n    98\t            if parent is not None:\n    99\t                    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Get fsId by ppaId\&quot;,\n   100\t                                          f\&quot;Get fsId [{data['ns2:request']['id']}]\&quot;,\n   101\t                                          kwargs={\&quot;fm:parentType\&quot;: node[\&quot;type\&quot;].upper(), \&quot;fm:id\&quot;: data['ns2:request']['id']})\n   102\t                    # data = xml_to_dict(data)\n   103\t                    fsId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   104\t                    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Add ppa to portfolio\&quot;,\n   105\t                                          f\&quot;Add ppa [{node['type']}:{name}] to portfolio\&quot;, new_path=\&quot;/itg/rest2/portfolios/${\&quot; + f\&quot;GD_{node['parent']['name']}_id\&quot; + \&quot;}/contents/ppas\&quot;,\n   106\t                                          fsId=fsId)\n   107\t\n   108\t        elif node[\&quot;type\&quot;] == \&quot;program\&quot;:\n   109\t            code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create a program by soap\&quot;,\n   110\t                                               f\&quot;create a program [{node['name']}] by soap api \&quot;,\n   111\t                                               kwargs={\&quot;ns1:name\&quot;: node[\&quot;name\&quot;] + str(timestamp)})\n   112\t            programId = SoapParser().get_first_element_body_by_name(data, \&quot;programId\&quot;)\n   113\t            setattr(GlobalData.local_data.namespace, f\&quot;GD_{node['name']}_id\&quot;, programId)\n   114\t            code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;update program to enable add to portfolio\&quot;,\n   115\t                                               f\&quot;update program to enable add to portfolio \&quot;, id=programId)\n   116\t            code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   117\t                                               \&quot;add program to portfolio without update program setting\&quot;,\n   118\t                                               f\&quot;add program to portfolio without update program setting \&quot;,\n   119\t                                               new_path=\&quot;/itg/rest2/portfolios/${\&quot; + f\&quot;GD_{node['parent']['name']}_id\&quot; + \&quot;}/contents/programs\&quot;,\n   120\t                                               programId=programId)\n   121\t        return node\n   122\t\n   123\t    def add_child(parent, child):\n   124\t        parent[\&quot;children\&quot;].append(child)\n   125\t\n   126\t    def create_hierarchy(data, parent=None):\n   127\t        node = create_node(data[\&quot;name\&quot;], data[\&quot;type\&quot;], parent)\n   128\t\n   129\t        if parent is not None:\n   130\t            add_child(parent, node)\n   131\t\n   132\t        for child_data in data.get(\&quot;children\&quot;, []):\n   133\t            create_hierarchy(child_data, node)\n   134\t\n   135\t        return node\n   136\t\n   137\t\n   138\t    # 创建层级结构并关联\n   139\t    hierarchy = create_hierarchy(hierarchy)\n   140\t\n   141\t\n   142\tdef batch_create_data():\n   143\t    input_data = {\n   144\t        \&quot;type\&quot;: \&quot;portfolio\&quot;,\n   145\t        \&quot;name\&quot;: \&quot;ws_TOP_ADM\&quot;,\n   146\t        \&quot;children\&quot;: [\n   147\t            {\n   148\t                \&quot;type\&quot;: \&quot;portfolio\&quot;,\n   149\t                \&quot;name\&quot;: \&quot;ws_sub_PPM\&quot;,\n   150\t                \&quot;children\&quot;: [\n   151\t                    {\n   152\t                        \&quot;type\&quot;: \&quot;program\&quot;,\n   153\t                        \&quot;name\&quot;: \&quot;ws_sub_PGM\&quot;\n   154\t                    }\n   155\t                ]\n   156\t            },\n   157\t            {\n   158\t                \&quot;type\&quot;: \&quot;program\&quot;,\n   159\t                \&quot;name\&quot;: \&quot;ws_PGM\&quot;\n   160\t            }\n   161\t        ]\n   162\t    }\n   163\t    # create tree\n   164\t    create_data(input_data)\n   165\t\n   166\t\n   167\timport threading\n   168\tfsId_list = []\n   169\tproject_list = []\n   170\tproposal_list = []\n   171\tproject_dict = {}\n   172\tproposal_dict = {}\n   173\t\n   174\tdef call_method(type_need):\n   175\t    month = \&quot;January,February,March,April,May,June,July,August,September,October,November,December\&quot;\n   176\t    if type_need == \&quot;proposal\&quot;:\n   177\t        startDate = random_choice(month) + ' ' + str(generate_year())\n   178\t        endDate = random_choice(month) + ' ' + str(generate_year('y+1'))\n   179\t        proposal_name = \&quot;ws_proposal_\&quot;+random_str(16)\n   180\t        code, data = request_in_a_function(r\&quot;/proposal/proposal_create.yaml\&quot;, \&quot;Create a proposal\&quot;,\n   181\t                                           \&quot;create proposal\&quot;,\n   182\t                                           kwargs={\&quot;$..*[?(@.token=='REQ.DESCRIPTION')].stringValue\&quot;: proposal_name,\n   183\t                                                   \&quot;$..*[?(@.token=='REQ.KNTA_PROJECT_NAME')].stringValue\&quot;: proposal_name,\n   184\t                                                   \&quot;$..*[?(@.token=='REQ.KNTA_PLAN_FINISH_DATE')].stringValue\&quot;: endDate,\n   185\t                                                   \&quot;$..*[?(@.token=='REQ.KNTA_PLAN_START_DATE')].stringValue\&quot;: startDate})\n   186\t        proposal_Id = data['ns2:request']['id']\n   187\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Get fsId by ppaId\&quot;,\n   188\t                                           f\&quot;Get fsId\&quot;,\n   189\t                                           kwargs={\&quot;fm:parentType\&quot;: \&quot;PROPOSAL\&quot;.upper(),\n   190\t                                                   \&quot;fm:id\&quot;: proposal_Id})\n   191\t        fsId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   192\t\n   193\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   194\t                                           \&quot;update financial summary with CapexOpex enabled\&quot;,\n   195\t                                           f\&quot;update financial summary with CapexOpex enabled\&quot;,\n   196\t                                           replace_info=True,\n   197\t                                           headers={\&quot;SOAPAction\&quot;: \&quot;urn:updateFinancialSummary\&quot;},\n   198\t                                           parameter=f'&lt;soapenv:Envelope xmlns:soapenv=\&quot;http://schemas.xmlsoap.org/soap/envelope/\&quot;&gt; &lt;soapenv:Header/&gt; &lt;soapenv:Body&gt; &lt;service:readFinancialSummaryResponse xmlns=\&quot;http://mercury.com/ppm/fm/1.0\&quot; xmlns:service=\&quot;http://mercury.com/ppm/fm/service/1.0\&quot; xmlns:xsi=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot;&gt; &lt;service:financialSummary&gt; &lt;id&gt;{fsId}&lt;/id&gt; &lt;name&gt;{proposal_name}&lt;/name&gt; &lt;parent&gt; &lt;parentType&gt;PROPOSAL&lt;/parentType&gt; &lt;parentIdentifier&gt; &lt;id&gt;{proposal_Id}&lt;/id&gt; &lt;name&gt;{proposal_name}&lt;/name&gt; &lt;/parentIdentifier&gt; &lt;/parent&gt; &lt;localCurrencyCode&gt;USD&lt;/localCurrencyCode&gt; &lt;baseCurrencyCode&gt;USD&lt;/baseCurrencyCode&gt; &lt;approvedBudgets/&gt; &lt;forecastActual&gt; &lt;isCapexOpexEnabled&gt;true&lt;/isCapexOpexEnabled&gt; &lt;actualRollupCode&gt;MANUAL&lt;/actualRollupCode&gt; &lt;lines&gt; &lt;line&gt; &lt;expenseType&gt;Capital&lt;/expenseType&gt; &lt;laborType&gt;Labor&lt;/laborType&gt; &lt;category&gt;Contractor&lt;/category&gt; &lt;syncSourceCode&gt;NO_SYNC&lt;/syncSourceCode&gt; &lt;editable&gt;true&lt;/editable&gt; &lt;cells&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-01-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-02-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-03-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-04-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-05-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-06-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-07-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-08-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-09-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-10-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-11-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-12-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;/cells&gt; &lt;userData/&gt; &lt;/line&gt; &lt;line&gt; &lt;expenseType&gt;Operating&lt;/expenseType&gt; &lt;laborType&gt;Labor&lt;/laborType&gt; &lt;category&gt;Employee&lt;/category&gt; &lt;syncSourceCode&gt;NO_SYNC&lt;/syncSourceCode&gt; &lt;editable&gt;true&lt;/editable&gt; &lt;cells&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-01-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-02-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-03-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-04-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-05-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-06-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-07-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-08-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-09-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-10-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-11-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-12-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;/cells&gt; &lt;userData/&gt; &lt;/line&gt; &lt;/lines&gt; &lt;userData/&gt; &lt;/forecastActual&gt; &lt;snapshots/&gt; &lt;npv&gt;-24000.0&lt;/npv&gt; &lt;tnr&gt;-24000.0&lt;/tnr&gt; &lt;/service:financialSummary&gt; &lt;/service:readFinancialSummaryResponse&gt; &lt;/soapenv:Body&gt;')\n   199\t\n   200\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create proposal staffing profile\&quot;,\n   201\t                                           f\&quot;create proposal staffing profile\&quot;,\n   202\t                                           kwargs={\&quot;ns1:name\&quot;: proposal_name,\n   203\t                                                   \&quot;ns1:id\&quot;: proposal_Id,\n   204\t                                                   \&quot;ns1:plannedStartPeriodFullName\&quot;: startDate,\n   205\t                                                   \&quot;ns1:plannedFinishPeriodFullName\&quot;: endDate})\n   206\t        staffingProfileId = SoapParser().get_first_element_body_by_name(data, \&quot;staffingProfileId\&quot;)\n   207\t        fsId_list.append({\&quot;fsId\&quot;: fsId, \&quot;id\&quot;: proposal_Id, \&quot;requestId\&quot;: proposal_Id})\n   208\t\n   209\t        proposal_list.append({\&quot;name\&quot;: proposal_name, \&quot;id\&quot;: proposal_Id, \&quot;fsid\&quot;: fsId, \&quot;spid\&quot;: staffingProfileId, \&quot;startDate\&quot;: startDate, \&quot;endDate\&quot;: endDate})\n   210\t\n   211\t    elif type_need == \&quot;project\&quot;:\n   212\t\n   213\t        project_name = \&quot;ws_project_\&quot;+random_str(16)\n   214\t        startDate = random_choice(month) + ' ' + str(generate_year())\n   215\t        endDate = random_choice(month) + ' ' + str(generate_year('y+1'))\n   216\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create a project by soap\&quot;,\n   217\t                                           \&quot;create project\&quot;,\n   218\t                                           kwargs={\n   219\t                                               \&quot;pm:plannedStartPeriodFullName\&quot;: startDate,\n   220\t                                               \&quot;pm:projectName\&quot;: project_name,\n   221\t                                               \&quot;pm:plannedFinishPeriodFullName\&quot;: endDate,\n   222\t                                           })\n   223\t        requestId = SoapParser().get_first_element_body_by_name(data, \&quot;requestId\&quot;)\n   224\t        projectId = SoapParser().get_first_element_body_by_name(data, \&quot;projectId\&quot;)\n   225\t        # setattr(GlobalData.local_data.namespace, f\&quot;GD_projectId\&quot;, projectId)\n   226\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Get fsId by ppaId\&quot;,\n   227\t                                           f\&quot;Get fsId\&quot;,\n   228\t                                           kwargs={\&quot;fm:parentType\&quot;: \&quot;PROJECT\&quot;.upper(),\n   229\t                                                   \&quot;fm:id\&quot;: projectId})\n   230\t\n   231\t        fsId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   232\t\n   233\t        # setattr(GlobalData.local_data.namespace, f\&quot;GD_projectfsid\&quot;, fsId)\n   234\t\n   235\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   236\t                                           \&quot;create financial summary forecastActual\&quot;,\n   237\t                                           f\&quot;create financial summary forecastActual\&quot;,\n   238\t                                           new_path=f\&quot;/itg/rest2/fs/{fsId}/forecastActual?fiscalYearId={periodId}\&quot;,\n   239\t                                           kwargs={\&quot;$..cells\&quot;: cellsData})\n   240\t\n   241\t        fsId_list.append({\&quot;fsId\&quot;: fsId, \&quot;id\&quot;: projectId, \&quot;requestId\&quot;: requestId})\n   242\t        # staffing profile\n   243\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create project staffing profile\&quot;,\n   244\t                                           f\&quot;create project staffing profile\&quot;,\n   245\t                                           kwargs={\&quot;ns1:name\&quot;: project_name,\n   246\t                                                   \&quot;ns1:id\&quot;: projectId,\n   247\t                                                   \&quot;ns1:plannedStartPeriodFullName\&quot;: startDate,\n   248\t                                                   \&quot;ns1:plannedFinishPeriodFullName\&quot;: endDate})\n   249\t        staffingProfileId = SoapParser().get_first_element_body_by_name(data, \&quot;staffingProfileId\&quot;)\n   250\t        print(\&quot;add profile\&quot;)\n   251\t\n   252\t        project_list.append({\&quot;name\&quot;: project_name, \&quot;id\&quot;: projectId, \&quot;fsid\&quot;: fsId, \&quot;spid\&quot;: staffingProfileId, \&quot;startDate\&quot;: startDate, \&quot;endDate\&quot;: endDate})\n   253\t\n   254\tdef add_position_and_fs():\n   255\t    list_all = project_list + proposal_list\n   256\t    for item in list_all:\n   257\t        formatted_end_date = convert_month_to_date(item[\&quot;endDate\&quot;], is_end_time=False)\n   258\t        formatted_start_date = convert_month_to_date(item[\&quot;startDate\&quot;])\n   259\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;add position\&quot;,\n   260\t                                           \&quot;add position\&quot;,\n   261\t                                           kwargs={\&quot;$..staffingProfile.id\&quot;: item[\&quot;spid\&quot;],\n   262\t                                                   \&quot;$..forecasts[?(@.type=='FTE')].startDate\&quot;:formatted_start_date,\n   263\t                                                   \&quot;$..forecasts[?(@.type=='FTE')].finishDate\&quot;:formatted_end_date})\n   264\t\n   265\tdef add_content(portfolioId, ppa=None):\n   266\t\n   267\t    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   268\t                                       \&quot;add content through candidate\&quot;,\n   269\t                                       f\&quot;add content through candidate\&quot;,\n   270\t                                       new_path=f\&quot;/itg/rest2/portfolios/{str(portfolioId)}/backlogs/candidates\&quot;,\n   271\t                                       ppas=[item[\&quot;fsId\&quot;] for item in ppa] if ppa else [])\n   272\t    logger.debug(f\&quot;add [{ppa}] to {portfolioId}\&quot;)\n   273\t\n   274\tdef add_to_program(programId, ppa=None):\n   275\t\n   276\t    id_list = [str(item['requestId']) for item in ppa]\n   277\t    # body = \&quot;&amp;\&quot;.join(f\&quot;requestId={request_id}\&quot; for request_id in id_list)\n   278\t    for i in id_list:\n   279\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   280\t                                           \&quot;add ppas to program\&quot;,\n   281\t                                           f\&quot;add ppas to program\&quot;,\n   282\t                                           new_path=f\&quot;/itg/rest2/program/{programId}/content/{i}\&quot;)\n   283\t        logger.debug(f\&quot;add [{ppa}] to {programId}\&quot;)\n   284\t\n   285\tdef create_role_and_resource():\n   286\t    name = \&quot;ws_rolo_\&quot;+random_str(16)\n   287\t    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create role with role name\&quot;,\n   288\t                                       f\&quot;create role with role name\&quot;,\n   289\t                                       kwargs={\&quot;ns1:name\&quot;: name})\n   290\t    roleId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   291\t    setattr(GlobalData.local_data.namespace, f\&quot;GD_role_id\&quot;, roleId)\n   292\t\n   293\t    # GlobalData.local_data.namespace.GD_role_id = roleId\n   294\t    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create resource pool\&quot;,\n   295\t                                       f\&quot;create resource pool\&quot;)\n   296\t    poolId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   297\t    setattr(GlobalData.local_data.namespace, f\&quot;GD_pool_id\&quot;, poolId)\n   298\t    # GlobalData.local_data.namespace.GD_pool_id = poolId\n   299\t    # add position\n   300\t\n   301\t\n   302\tdef thread(n):\n   303\t    threads = []\n   304\t    for i in range(0, n):  # n 为并发数\n   305\t        t = threading.Thread(target=call_method, args=(\&quot;proposal\&quot;,))\n   306\t        t1 = threading.Thread(target=call_method, args=(\&quot;project\&quot;,))\n   307\t        # 针对函数创建线程，target为调用的并发函数，args为调用函数的参数，该参数必须为数组，所以这里加了逗号，如果不加就不是数组，运行会报错\n   308\t        threads.append(t)  # 添加线程到线程组\n   309\t        threads.append(t1)\n   310\t    print(threads)\n   311\t\n   312\t    for t in threads:\n   313\t        t.start()  # 开启线程\n   314\t    for t in threads:\n   315\t        t.join()  # 等待所有线程终止\n   316\t\n   317\tdef get_global_defaultRegion():\n   318\t    from comm.unit.GlobalVariable import GlobalData\n   319\t    from comm.unit.apiMethod import get\n   320\t    response, res = get(headers={}, address=AC[PROJECT_NAME][\&quot;host\&quot;] + \&quot;/itg/rest2/pm/projects/region/default\&quot;,\n   321\t                        data=None,\n   322\t                        downloadName=None, timeout=8, cookies=None, auth=(\&quot;admin\&quot;, \&quot;admin\&quot;))\n   323\t\n   324\t    GlobalData.local_data.namespace.GD_global_defaultRegion_id = jsonpath.jsonpath(res, \&quot;$..id\&quot;)[0]\n   325\t    GlobalData.local_data.namespace.GD_global_defaultRegion_name = jsonpath.jsonpath(res, \&quot;$..name\&quot;)[0]\n   326\t\n   327\t\n   328\tdef split_list_randomly(lst, num_parts):\n   329\t    random.shuffle(lst)  # 随机打乱列表中的元素\n   330\t    sublist_size = len(lst) // num_parts  # 每个子列表的大小\n   331\t    remainder = len(lst) % num_parts  # 列表元素不能整除时的余数\n   332\t\n   333\t    result = []\n   334\t    start = 0\n   335\t    for i in range(num_parts):\n   336\t        sublist = lst[start:start+sublist_size]  # 取出一个子列表\n   337\t        result.append(sublist)  # 将子列表添加到结果中\n   338\t        start += sublist_size  # 更新下一个子列表的起始位置\n   339\t\n   340\t    # 将余数中的元素依次添加到子列表中，保证元素不重复\n   341\t    for i in range(remainder):\n   342\t        result[i].append(lst[start+i])\n   343\t\n   344\t    return result\n   345\t\n   346\t\n   347\t\n   348\tif __name__ == '__main__':\n   349\t    get_global_defaultRegion()\n   350\t    create_role_and_resource()\n   351\t    # # query period ids\n   352\t    periodList = Database().query(\&quot;ppm_fiscal_periods\&quot;, [{\&quot;column\&quot;: \&quot;period_type\&quot;, \&quot;op\&quot;: \&quot;==\&quot;, \&quot;value\&quot;: \&quot;4\&quot;},\n   353\t                                                         {\&quot;column\&quot;: \&quot;(TRUNC(start_date)\&quot;, \&quot;op\&quot;: \&quot;&gt;=\&quot;,\n   354\t                                                          \&quot;value\&quot;: f\&quot;TO_DATE('{generate_year()}-01-01', 'YYYY-MM-DD')\&quot;},\n   355\t                                                         {\&quot;column\&quot;: \&quot;(TRUNC(end_date)\&quot;, \&quot;op\&quot;: \&quot;&gt;=\&quot;,\n   356\t                                                          \&quot;value\&quot;: f\&quot;TO_DATE('{generate_year()}-12-31', 'YYYY-MM-DD')\&quot;}],\n   357\t                                  [\&quot;fiscal_period_id\&quot;])\n   358\t    cellsData = [{\&quot;periodId\&quot;: item[\&quot;fiscal_period_id\&quot;], \&quot;localPlanValue\&quot;: 1000, \&quot;localActualValue\&quot;: 2000} for item in\n   359\t                 periodList]\n   360\t\n   361\t    # query year period id\n   362\t    periodId = Database().query(\&quot;ppm_fiscal_periods\&quot;, [{\&quot;column\&quot;: \&quot;period_type\&quot;, \&quot;op\&quot;: \&quot;==\&quot;, \&quot;value\&quot;: \&quot;6\&quot;},\n   363\t                                                       {\&quot;column\&quot;: \&quot;long_name\&quot;, \&quot;op\&quot;: \&quot;==\&quot;,\n   364\t                                                        \&quot;value\&quot;: f\&quot;{generate_year()}\&quot;}],\n   365\t                                [\&quot;fiscal_period_id\&quot;])[0][\&quot;fiscal_period_id\&quot;]\n   366\t\n   367\t    thread(2)\n   368\t    batch_create_data()\n   369\t    # 将ppa随机分配至三个地方\n   370\t    list_res = split_list_randomly(fsId_list, 3)\n   371\t    top_portfolioId = getattr(GlobalData.local_data.namespace, \&quot;GD_ws_TOP_ADM_id\&quot;)\n   372\t    add_content(top_portfolioId, list_res[0])\n   373\t    sub_portfolioId = getattr(GlobalData.local_data.namespace, \&quot;GD_ws_sub_PPM_id\&quot;)\n   374\t    add_content(sub_portfolioId, list_res[2])\n   375\t    programId_tree = getattr(GlobalData.local_data.namespace, \&quot;GD_ws_PGM_id\&quot;)\n   376\t    add_to_program(programId_tree, list_res[1])\n   377\t\n   378\t    add_position_and_fs()\n   379\t\n   380\t\n   381\t\nTotal lines in file: 381\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01SS3JTNpMhhDHMmSLDTv1P1&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:07.466Z&quot;,&quot;response_text&quot;:&quot;现在让我查看一些核心的配置文件和测试用例结构：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;0a27fb06-2637-4c64-83ec-b0e9457c385f&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01V2RkPXpmsfW5VXjwj4wfKu&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;requirements.txt\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on startup.py:\n     1\t# -*- coding:utf-8 -*-\n     2\t# @File    : startup.py\n     3\timport os\n     4\timport re\n     5\timport sys\n     6\t\n     7\timport jsonpath\n     8\timport pytest\n     9\tfrom comm.script.writeLogs import logger\n    10\t\n    11\t\n    12\tif __name__ == '__main__':\n    13\t\n    14\t    from comm.script import writeCasev2\n    15\t    from config import *\n    16\t\n    17\t    if RC['auto_switch'] == 3:\n    18\t        logger.info(\&quot;According to interface capture data, automatically generate test cases and test scripts, but do not run tests!\&quot;)\n    19\t        writeCasev2.write_case(DATA_DIR, auto_yaml=True)\n    20\t        sys.exit(0)\n    21\t\n    22\t    elif RC['auto_switch'] == 2:\n    23\t        logger.info(\&quot;According to the interface capture data, automatically generate test cases and test scripts, and then run the test!\&quot;)\n    24\t        writeCasev2.write_case(DATA_DIR, auto_yaml=True)\n    25\t\n    26\t    elif RC['auto_switch'] == 1:\n    27\t\n    28\t        if not os.path.exists(RC['scan_dir']):\n    29\t            RC['scan_dir'] = PAGE_DIR\n    30\t        logger.info(\&quot;Automatically generate test scripts based on hand-written use cases, and then run the tests!\&quot;)\n    31\t        writeCasev2.write_case(RC['scan_dir'], auto_yaml=False)\n    32\t\n    33\t    else:\n    34\t        logger.info(\&quot;Do not enable automatic test case generation function, will run the test directly!\&quot;)\n    35\t\n    36\t    args_list = ['-vs', TEST_DIR,\n    37\t                 '-n', str(RC['process']),\n    38\t                 '-m', 'not {}'.format(\&quot;tag\&quot;),\n    39\t                 '--reruns', str(RC['reruns']),\n    40\t                 '--maxfail', str(RC['maxfail']),\n    41\t                 '--alluredir', REPORT_DIR+'/xml',\n    42\t                 '--clean-alluredir']\n    43\t\n    44\t    if RC['pattern']:\n    45\t        args_list += ['-k ' + str(RC['pattern'])]\n    46\t    try:\n    47\t        # run script\n    48\t        test_result = pytest.main(args_list)\n    49\t\n    50\t        # report\n    51\t        cmd = 'allure generate --clean %s -o %s ' % (REPORT_DIR+'/xml', REPORT_DIR+'/html')\n    52\t        os.system(cmd)\n    53\t    except Exception as e:\n    54\t        raise e\n    55\t\n    56\t\nTotal lines in file: 56\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_012Qt5MBNbgE2rn4kKJrJg95&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:13.357Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;dc17424d-ca32-4b0c-a452-636f3919e596&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_015sxxgvtqBQdqioxp5ug23F&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;PyDemo/page/Portfolio\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;让我查看一些测试用例的结构：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on requirements.txt:\n     1\tallure-pytest==2.9.43\n     2\tallure-python-commons==2.9.43\n     3\tatomicwrites==1.4.0\n     4\tattrs==21.2.0\n     5\tcertifi==2021.5.30\n     6\tcharset-normalizer==2.0.6\n     7\tcolorama==0.4.4\n     8\tdecorator==5.1.0\n     9\telasticsearch==7.15.0\n    10\texecnet==1.9.0\n    11\tFaker~=8.8.1\n    12\tgreenlet==1.1.1\n    13\tgssapi==1.7.0\n    14\tidna==3.2\n    15\tiniconfig==1.1.1\n    16\tjsonpath==0.82\n    17\tmore-itertools==8.10.0\n    18\tmulti-key-dict==2.0.3\n    19\tpackaging==21.0\n    20\tpbr==5.6.0\n    21\tphoenixdb~=1.0.1\n    22\tpluggy==1.0.0\n    23\tprotobuf==3.18.0\n    24\tpy==1.10.0\n    25\tPyHamcrest==2.0.2\n    26\tPyMySQL~=0.9.3\n    27\tpyparsing==2.4.7\n    28\tpytest==6.2.5\n    29\tpytest-forked==1.3.0\n    30\tpytest-metadata==1.11.0\n    31\tpytest-ordering==0.6\n    32\tpytest-rerunfailures==10.2\n    33\tpytest-xdist==2.4.0\n    34\tpython-dateutil~=2.8.1\n    35\tpython-jenkins==1.7.0\n    36\tPyYAML==5.4.1\n    37\tredis==3.5.3\n    38\trequests~=2.22.0\n    39\trequests-gssapi==1.2.3\n    40\trequests-toolbelt==0.9.1\n    41\tsimplejson~=3.17.2\n    42\tsix==1.16.0\n    43\tSQLAlchemy==1.4.25\n    44\ttext-unidecode==1.3\n    45\ttoml==0.10.2\n    46\turllib3==1.26.7\n    47\tFlask~=2.0.2\n    48\tconfig~=0.5.0.post0\n    49\tpymssql~=2.2.1\n    50\tconfigparser~=5.0.0\n    51\txmltodict~=0.13.0\n    52\tpandas~=1.3.5\n    53\tpyodbc~=4.0.39\n    54\tpsycopg2~=2.9.5\n    55\tchardet~=3.0.4\nTotal lines in file: 55\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01V2RkPXpmsfW5VXjwj4wfKu&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:19.138Z&quot;,&quot;response_text&quot;:&quot;让我查看一些测试用例的结构：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;9a991cbc-b29c-4391-8a8f-9721c07c1c6c&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_019yP6WPpxQPbZy5xmY2TAVj&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;PyDemo/page/Portfolio/test_portfolio_create.yaml\&quot;, \&quot;type\&quot;: \&quot;file\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in PyDemo/page/Portfolio, excluding hidden items:\nPyDemo/page/Portfolio/PortfolioContent\nPyDemo/page/Portfolio/PortfolioContent/test_content_add.yaml\nPyDemo/page/Portfolio/portfolio_api.yaml\nPyDemo/page/Portfolio/test_portfolio_create.yaml\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_015sxxgvtqBQdqioxp5ug23F&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:24.880Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;f27d6248-c95d-43f4-96f2-65abcf1b5c19&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_015zeSczb7mA3xDobE69JNcB&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;comm\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;让我查看一些核心的工具类：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the result of running `cat -n` on PyDemo/page/Portfolio/test_portfolio_create.yaml:\n     1\ttest_info:\n     2\t  epic: Portfolio\n     3\t  feature: PortfolioCreate\n     4\t  story: PortfolioCreate\n     5\t  host: ${host}\n     6\t  method: POST\n     7\t  address: /itg/rest2/portfolios\n     8\t  mime_type: application/json\n     9\t  headers: {}\n    10\t  auth: ${AUTH}\n    11\t  timeout: ${timeout}\n    12\t  file: false\n    13\t  cookies: false\n    14\t  setup:\n    15\t    premise: false\n    16\t    function: false\n    17\t  clean_up:\n    18\ttest_case:\n    19\t- summary: Create a portfolio\n    20\t  skip:\n    21\t  title: Create a portfolio by rest\n    22\t  tag: TAG01\n    23\t  describe:\n    24\t    Description:\n    25\t      - step1:prepare a portfolio with sub-portfolio\n    26\t      - step2:parent portfolio should add a bg with private KPI\n    27\t      - step3:creat a bg with parent bg\n    28\t    FunctionDesigner: Liu Hang\n    29\t    Author: Xuanyu Liu\n    30\t    CreateDate: 8/5/2023'\n    31\t  issue: create scenario 01\n    32\t  premise: # [path key description]\n    33\t#    - /UserManagement/SecurityGroup/test_security_group_add.yaml\n    34\t#    - create security group with accessGrants\n    35\t#    - 创建安全组\n    36\t  setup_function:\n    37\t#    func_create_user_with_specified_license_and_security_group:\n    38\t#      licenses: [6,2]\n    39\t#      password: Asdf1@34\n    40\t#      securityGroups:\n    41\t#        - ${id}\n    42\t  auth:\n    43\t  parameter:\n    44\t    name: ws_portfolio_$GenTimeStamp()\n    45\t    managers:\n    46\t      - userId: ${ADMIN_USER_ID}\n    47\t        fullName: ${ADMIN_FULLNAME}\n    48\t    portfolioType:\n    49\t      id: -1\n    50\t  check_body:\n    51\t    check_type: check_json\n    52\t    expected_code: 200\n    53\t    expected_result:\n    54\t        - [\&quot;eq\&quot;, \&quot;$..name\&quot;, '${name}']\n    55\t        - [\&quot;gt\&quot;, \&quot;$..id\&quot;, 0]\n    56\t  clean_up:\n    57\t#    func_add_security_group_to_user:\n    58\t#      securityGroupId: ${GD_sgId}\n    59\t#      userId: ${GD_userId}\n    60\t- summary: Create a portfolio and add a sub-portfolio\n    61\t  skip: true\n    62\t  title: Create a portfolio and add a sub-portfolio\n    63\t  describe:\n    64\t    Description:\n    65\t      - step1:prepare a portfolio with sub-portfolio\n    66\t      - step2:parent portfolio should add a bg with private KPI\n    67\t      - step3:creat a bg with parent bg\n    68\t    FunctionDesigner: Liu Hang\n    69\t    Author: Xuanyu Liu\n    70\t    CreateDate: 8/5/2023'\n    71\t  tag: TAG01\n    72\t  issue: create scenario 01\n    73\t  premise: # [path key description]\n    74\t    - /Portfolio/test_portfolio_create.yaml\n    75\t    - Create a portfolio\n    76\t    - 创建一个portfolio以供后续添加子portfolio\n    77\t  setup_function:\n    78\t#    func_create_user_with_specified_license_and_security_group:\n    79\t#      licenses: [6,2]\n    80\t#      password: Asdf1@34\n    81\t#      securityGroups:\n    82\t#        - ${id}\n    83\t  auth:\n    84\t  parameter:\n    85\t    name: ws_portfolio_$GenTimeStamp()\n    86\t    managers:\n    87\t      - userId: ${ADMIN_USER_ID}\n    88\t        fullName: ${ADMIN_FULLNAME}\n    89\t    portfolioType:\n    90\t      id: -1\n    91\t  check_body:\n    92\t    check_type: check_json\n    93\t    expected_code: 200\n    94\t    expected_result:\n    95\t        - [\&quot;eq\&quot;, \&quot;$..name\&quot;, '${name}']\n    96\t        - [\&quot;gt\&quot;, \&quot;$..id\&quot;, 0]\n    97\t  clean_up:\n    98\t\nTotal lines in file: 98\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_019yP6WPpxQPbZy5xmY2TAVj&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:30.206Z&quot;,&quot;response_text&quot;:&quot;让我查看一些核心的工具类：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;ed255a73-2c65-4736-adf7-7508dee4b596&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01N56giNa3qrreWLSzTMuzxJ&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;comm/unit/apiSend.py\&quot;, \&quot;type\&quot;: \&quot;file\&quot;, \&quot;view_range\&quot;: [1, 50]}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in comm, excluding hidden items:\ncomm/__init__.py\ncomm/__pycache__\ncomm/__pycache__/__init__.cpython-37.pyc\ncomm/script\ncomm/script/__init__.py\ncomm/script/__pycache__\ncomm/script/writeCase.py\ncomm/script/writeCaseYml.py\ncomm/script/writeCasev2.py\ncomm/script/writeLogs.py\ncomm/unit\ncomm/unit/GlobalVariable.py\ncomm/unit/__init__.py\ncomm/unit/__pycache__\ncomm/unit/apiMethod.py\ncomm/unit/apiSend.py\ncomm/unit/checkResult.py\ncomm/unit/initializeFunc.py\ncomm/unit/initializePremise.py\ncomm/unit/initializePremiseData.py\ncomm/unit/initializePremiseData1.py\ncomm/unit/queryDatabase.py\ncomm/unit/readRelevance.py\ncomm/unit/replaceRelevance.py\ncomm/utils\ncomm/utils/SoapParser.py\ncomm/utils/__init__.py\ncomm/utils/__pycache__\ncomm/utils/allureHandle.py\ncomm/utils/databaseExecute.py\ncomm/utils/jsonSearch.py\ncomm/utils/randomly.py\ncomm/utils/readConf.py\ncomm/utils/readJson.py\ncomm/utils/readYaml.py\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_015zeSczb7mA3xDobE69JNcB&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:38.401Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;55c4d9e3-e435-43c1-9577-a3005d573218&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_01TKZV9obwJ6QyYK9k8CVWMh&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;PyDemo/testcase/Portfolio\&quot;, \&quot;type\&quot;: \&quot;directory\&quot;}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;现在让我查看一个生成的测试用例：\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Note:\nView range expanded to meet minimum size of 500 lines. End line adjusted to last line of file (172).\n\nHere's the result of running `cat -n` on comm/unit/apiSend.py:\n     1\t\n     2\t# @File    : apiSend.py\n     3\t# ***********************\n     4\timport json\n     5\tfrom comm.script.writeLogs import logger\n     6\timport allure\n     7\timport time\n     8\tfrom config import INTERVAL, PROXY, PROXIES\n     9\tfrom comm.unit import apiMethod\n    10\t\n    11\t\n    12\tdef send_request(test_info, case_data, CallFunctionDes=None):\n    13\t    \&quot;\&quot;\&quot;\n    14\t    Encapsulation request\n    15\t    :param test_info: test information\n    16\t    :param case_data: use case data\n    17\t    :param CallFunctionDes: current behavior description\n    18\t    :return:\n    19\t    \&quot;\&quot;\&quot;\n    20\t    try:\n    21\t        address = case_data.get(\&quot;address\&quot;, False)\n    22\t        host = test_info[\&quot;host\&quot;]\n    23\t        method = case_data[\&quot;method\&quot;].upper() if case_data.get(\&quot;method\&quot;, False) else test_info[\&quot;method\&quot;].upper()\n    24\t        address = case_data[\&quot;address\&quot;] if address else test_info[\&quot;address\&quot;]\n    25\t        mime_type = case_data[\&quot;mime_type\&quot;] if case_data.get(\&quot;mime_type\&quot;, False) else test_info[\&quot;mime_type\&quot;]\n    26\t        headers = test_info[\&quot;headers\&quot;]\n    27\t        cookies = test_info[\&quot;cookies\&quot;]\n    28\t        file = test_info[\&quot;file\&quot;]\n    29\t        timeout = test_info[\&quot;timeout\&quot;]\n    30\t        summary = case_data[\&quot;summary\&quot;]\n    31\t        parameter = case_data[\&quot;parameter\&quot;]\n    32\t        auth = tuple(case_data[\&quot;auth\&quot;]) if case_data[\&quot;auth\&quot;] else tuple(test_info[\&quot;auth\&quot;])\n    33\t        download_name = case_data[\&quot;download_name\&quot;] if 'download_name' in case_data.keys() else None\n    34\t        if PROXY:\n    35\t            proxies = PROXIES\n    36\t    except Exception as e:\n    37\t        raise KeyError(f'Failed to obtain basic information about the case:{e}')\n    38\t\n    39\t    request_url = host + address\n    40\t    logger.info(\&quot;=\&quot; * 150)\n    41\t    logger.info(f\&quot;Host：{str(host)}\&quot;)\n    42\t    logger.info(f\&quot;Path：{str(address)}\&quot;)\n    43\t    logger.info(f\&quot;Headers: {str(headers)}\&quot;)\n    44\t    logger.info(f\&quot;Parameters: {str(parameter)}\&quot;)\n    45\t    step = CallFunctionDes if CallFunctionDes else case_data['summary']\n    46\t\n    47\t    if summary == 'save_cookies':\n    48\t        with allure.step(\&quot;Save cookies\&quot;):\n    49\t            allure.attach(name=\&quot;Host\&quot;, body=str(host))\n    50\t            allure.attach(name=\&quot;Path\&quot;, body=str(address))\n    51\t            allure.attach(name=\&quot;Headers\&quot;, body=str(headers))\n    52\t            allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n    53\t            apiMethod.save_cookie(headers=headers,\n    54\t                                  address=request_url,\n    55\t                                  mime_type=mime_type,\n    56\t                                  data=parameter,\n    57\t                                  cookies=cookies,\n    58\t                                  timeout=timeout)\n    59\t    if method == 'POST':\n    60\t        logger.info(\&quot;Request method: POST\&quot;)\n    61\t        if file:\n    62\t            result = apiMethod.post(headers=headers,\n    63\t                                    address=request_url,\n    64\t                                    mime_type=mime_type,\n    65\t                                    files=case_data[\&quot;file\&quot;],\n    66\t                                    data=parameter,\n    67\t                                    auth=auth,\n    68\t                                    cookies=cookies,\n    69\t                                    proxy=proxies,\n    70\t                                    timeout=timeout)\n    71\t            with allure.step(f\&quot;POST upload file[{step}]\&quot;):\n    72\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n    73\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n    74\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n    75\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n    76\t                allure.attach(name=\&quot;Uploaded file\&quot;, body=str(case_data[\&quot;file\&quot;]))\n    77\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n    78\t                allure.attach(name=\&quot;Response\&quot;, body=str(f\&quot;status_code:{result[0]}\&quot;+\&quot; result:\&quot;+result[1]))\n    79\t        else:\n    80\t            result = apiMethod.post(headers=headers,\n    81\t                                    address=request_url,\n    82\t                                    mime_type=mime_type,\n    83\t                                    data=parameter,\n    84\t                                    auth=auth,\n    85\t                                    proxy=proxies,\n    86\t                                    cookies=cookies,\n    87\t                                    timeout=timeout)\n    88\t            with allure.step(f\&quot;POST [{step}]\&quot;):\n    89\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n    90\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n    91\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n    92\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n    93\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n    94\t                allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot;+str(result[1]))\n    95\t            logger.info(\&quot;Request result: %s\&quot; % str(result))\n    96\t    elif method == 'GET':\n    97\t        logger.info(\&quot;Request method: GET\&quot;)\n    98\t        result = apiMethod.get(headers=headers,\n    99\t                               address=request_url,\n   100\t                               data=parameter,\n   101\t                               cookies=cookies,\n   102\t                               auth=auth,\n   103\t                               proxy=proxies,\n   104\t                               timeout=timeout,\n   105\t                               downloadName=download_name)\n   106\t\n   107\t        with allure.step(f\&quot;GET [{step}]\&quot;):\n   108\t            allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   109\t            allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   110\t            allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   111\t            allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   112\t            allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   113\t            allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   114\t\n   115\t    elif method == 'PUT':\n   116\t        logger.info(\&quot;Request method: PUT\&quot;)\n   117\t        if file:\n   118\t            result = apiMethod.put(headers=headers,\n   119\t                                   address=request_url,\n   120\t                                   mime_type=mime_type,\n   121\t                                   files=parameter,\n   122\t                                   auth=auth,\n   123\t                                   proxy=proxies,\n   124\t                                   cookies=cookies,\n   125\t                                   timeout=timeout)\n   126\t            with allure.step(f\&quot;PUT uploaded file[{step}]\&quot;):\n   127\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   128\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   129\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   130\t                allure.attach(name=\&quot;Uploaded file\&quot;, body=str(case_data[\&quot;file\&quot;]))\n   131\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   132\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   133\t                allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   134\t\n   135\t        else:\n   136\t            result = apiMethod.put(headers=headers,\n   137\t                                   address=request_url,\n   138\t                                   mime_type=mime_type,\n   139\t                                   data=parameter,\n   140\t                                   auth=auth,\n   141\t                                   proxy=proxies,\n   142\t                                   cookies=cookies,\n   143\t                                   timeout=timeout)\n   144\t            with allure.step(f\&quot;PUT [{step}]\&quot;):\n   145\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   146\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   147\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   148\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   149\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   150\t                allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   151\t    elif method == 'DELETE':\n   152\t        logger.info(\&quot;Request method: DELETE\&quot;)\n   153\t        result = apiMethod.delete(headers=headers,\n   154\t                                  address=request_url,\n   155\t                                  data=parameter,\n   156\t                                  auth=auth,\n   157\t                                  proxy=proxies,\n   158\t                                  cookies=cookies,\n   159\t                                  timeout=timeout)\n   160\t        with allure.step(f\&quot;DELETE [{step}]\&quot;):\n   161\t            allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   162\t            allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   163\t            allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   164\t            allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   165\t            allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   166\t            allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   167\t    else:\n   168\t        result = {\&quot;code\&quot;: None, \&quot;data\&quot;: None}\n   169\t    logger.info(\&quot;Request result: %s\&quot; % str(result))\n   170\t    time.sleep(INTERVAL)\n   171\t    return result\n   172\t\nTotal lines in file: 172\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01N56giNa3qrreWLSzTMuzxJ&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:43.961Z&quot;,&quot;response_text&quot;:&quot;现在让我查看一个生成的测试用例：\n&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;0e75264d-3cd2-4c38-8c1f-3c44b844be01&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:5,&quot;content&quot;:&quot;&quot;,&quot;tool_use&quot;:{&quot;tool_use_id&quot;:&quot;toolu_vrtx_014PnAoxDFbQZiH19UCzwpqE&quot;,&quot;tool_name&quot;:&quot;view&quot;,&quot;input_json&quot;:&quot;{\&quot;path\&quot;: \&quot;PyDemo/testcase/Portfolio/test_portfolio_create.py\&quot;, \&quot;type\&quot;: \&quot;file\&quot;, \&quot;view_range\&quot;: [1, 50]}&quot;,&quot;mcp_server_name&quot;:&quot;&quot;,&quot;mcp_tool_name&quot;:&quot;&quot;}},{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Here's the files and directories up to 2 levels deep in PyDemo/testcase/Portfolio, excluding hidden items:\nPyDemo/testcase/Portfolio/PortfolioContent\nPyDemo/testcase/Portfolio/PortfolioContent/__pycache__\nPyDemo/testcase/Portfolio/PortfolioContent/test_content_add.py\nPyDemo/testcase/Portfolio/__pycache__\nPyDemo/testcase/Portfolio/__pycache__/test_portfolio_create.cpython-37-pytest-6.2.5.pyc\nPyDemo/testcase/Portfolio/test_portfolio_create.py\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_01TKZV9obwJ6QyYK9k8CVWMh&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:50.207Z&quot;,&quot;response_text&quot;:&quot;&quot;,&quot;workspace_file_chunks&quot;:[]},{&quot;status&quot;:&quot;success&quot;,&quot;request_id&quot;:&quot;c3dc74ed-1c70-4d1d-bbb7-0f24eec49026&quot;,&quot;request_message&quot;:&quot;&quot;,&quot;structured_output_nodes&quot;:[{&quot;id&quot;:0,&quot;type&quot;:0,&quot;content&quot;:&quot;基于我对这个项目的深入分析，我来为你梳理这个接口自动化测试框架项目，并提供面试可能会问到的问题和答案：\n\n#  项目梳理总结\n\n##  项目概述\n\n这是一个基于 **Python3 + pytest + Requests + Allure + YAML + JSON** 实现的全链路接口自动化测试框架，支持多种测试场景和数据驱动。\n\n## ️ 项目架构\n\n### 核心目录结构\n```\nDemo_Test-master/\n├── PyDemo/                    # 主项目包\n│   ├── method_collection/     # 自定义函数集合\n│   ├── page/                  # 测试用例配置(YAML)\n│   ├── testcase/             # 生成的测试脚本(Python)\n│   └── data/                 # 测试数据\n├── comm/                     # 公共工具包\n│   ├── script/               # 脚本工具(日志、用例生成)\n│   ├── unit/                 # 核心单元(API发送、结果校验)\n│   └── utils/                # 工具类(数据库、随机数等)\n├── config/                   # 配置文件\n├── report/                   # 测试报告\n└── startup.py               # 启动入口\n```\n\n##  核心功能特性\n\n### 1. 多种运行模式 (auto_switch)\n- **0**: 直接运行测试，不生成用例\n- **1**: 根据手工编写用例自动生成测试脚本并运行\n- **2**: 根据抓包数据自动生成用例和脚本并运行  \n- **3**: 根据抓包数据生成用例和脚本但不运行\n\n### 2. 接口依赖处理\n- 支持前置接口预置\n- 自动处理数据依赖关系\n- 支持参数化引用 `${var}`\n\n### 3. 多种校验方式\n- **no_check**: 不校验\n- **check_code**: 仅校验状态码\n- **check_json**: JSON格式校验(默认)\n- **entirely_check**: 完整比较\n- **regular_check**: 正则匹配\n- **check_db**: 数据库校验\n\n### 4. 参数化支持\n- 变量引用: `${var}`\n- 函数助手: `$RandInt()`, `$GenGuid()`\n- 自定义函数: `func_xxx{\&quot;param1\&quot;:\&quot;value1\&quot;}`\n\n##  面试问题与答案\n\n### Q1: 请介绍一下这个自动化测试框架的整体架构？\n\n**答案:**\n这是一个分层架构的接口自动化测试框架：\n\n&lt;augment_code_snippet path=\&quot;startup.py\&quot; mode=\&quot;EXCERPT\&quot;&gt;\n```python\nif RC['auto_switch'] == 1:\n    logger.info(\&quot;Automatically generate test scripts based on hand-written use cases, and then run the tests!\&quot;)\n    writeCasev2.write_case(RC['scan_dir'], auto_yaml=False)\n```\n&lt;/augment_code_snippet&gt;\n\n- **配置层**: 通过YAML文件管理环境配置、运行参数\n- **数据层**: YAML+JSON存储测试用例和测试数据\n- **逻辑层**: 核心处理单元，包括请求发送、结果校验、依赖处理\n- **执行层**: pytest驱动测试执行，支持并发和重试\n- **报告层**: Allure生成可视化测试报告\n\n### Q2: 框架是如何处理接口依赖的？\n\n**答案:**\n框架通过多种方式处理接口依赖：\n\n&lt;augment_code_snippet path=\&quot;PyDemo/page/Portfolio/test_portfolio_create.yaml\&quot; mode=\&quot;EXCERPT\&quot;&gt;\n```yaml\npremise: # [path key description]\n  - /Portfolio/test_portfolio_create.yaml\n  - Create a portfolio\n  - 创建一个portfolio以供后续添加子portfolio\n```\n&lt;/augment_code_snippet&gt;\n\n1. **前置接口配置**: 在用例中配置premise字段，指定前置接口路径\n2. **数据依赖**: 通过`${变量名}`引用前置接口的响应数据\n3. **全局变量**: 使用GlobalData存储跨用例的共享数据\n4. **自动替换**: 框架自动解析和替换变量引用\n\n### Q3: 如何实现数据驱动测试？\n\n**答案:**\n框架采用YAML+JSON的数据驱动方式：\n\n&lt;augment_code_snippet path=\&quot;PyDemo/testcase/Portfolio/test_portfolio_create.py\&quot; mode=\&quot;EXCERPT\&quot;&gt;\n```python\n@pytest.mark.parametrize(\&quot;case_data\&quot;, case_dict[\&quot;test_case\&quot;])\ndef test_PortfolioCreate(self, case_data):\n```\n&lt;/augment_code_snippet&gt;\n\n1. **YAML配置**: 存储接口基本信息和测试用例\n2. **JSON数据**: 存储复杂的请求参数和响应数据\n3. **参数化**: 使用pytest的parametrize装饰器实现数据驱动\n4. **动态生成**: 支持从抓包数据自动生成测试用例\n\n### Q4: 框架支持哪些类型的断言校验？\n\n**答案:**\n框架支持7种校验方式：\n\n&lt;augment_code_snippet path=\&quot;PyDemo/page/Portfolio/test_portfolio_create.yaml\&quot; mode=\&quot;EXCERPT\&quot;&gt;\n```yaml\ncheck_body:\n  check_type: check_json\n  expected_code: 200\n  expected_result:\n      - [\&quot;eq\&quot;, \&quot;$..name\&quot;, '${name}']\n      - [\&quot;gt\&quot;, \&quot;$..id\&quot;, 0]\n```\n&lt;/augment_code_snippet&gt;\n\n1. **check_json**: 使用JSONPath进行灵活的JSON校验\n2. **check_db**: 数据库查询结果校验\n3. **entirely_check**: 完整响应比较\n4. **regular_check**: 正则表达式匹配\n5. **check_code**: 仅校验HTTP状态码\n6. **no_check**: 不进行校验\n7. **check_by_other_api**: 通过其他接口校验\n\n### Q5: 如何处理测试环境的切换？\n\n**答案:**\n框架通过配置文件实现环境切换：\n\n1. **项目配置**: apiConfig.yaml中配置不同环境的host等信息\n2. **数据库配置**: dbConfig.yaml配置不同环境的数据库连接\n3. **运行配置**: runConfig.yaml中指定当前运行的项目名\n4. **动态加载**: 根据project_name动态加载对应环境的配置\n\n### Q6: 框架的并发测试是如何实现的？\n\n**答案:**\n&lt;augment_code_snippet path=\&quot;PyDemo/method_collection/Portfolio/Function.py\&quot; mode=\&quot;EXCERPT\&quot;&gt;\n```python\ndef thread(n):\n    threads = []\n    for i in range(0, n):  # n 为并发数\n        t = threading.Thread(target=call_method, args=(\&quot;proposal\&quot;,))\n        threads.append(t)  # 添加线程到线程组\n```\n&lt;/augment_code_snippet&gt;\n\n1. **pytest-xdist**: 使用pytest插件实现进程级并发\n2. **threading**: 在自定义函数中使用线程实现并发\n3. **配置控制**: 通过runConfig.yaml中的process参数控制并发数\n4. **失败重试**: 支持失败用例的自动重试机制\n\n### Q7: 如何保证测试数据的隔离性？\n\n**答案:**\n1. **随机数据**: 使用时间戳和随机字符串生成唯一测试数据\n2. **数据清理**: 支持teardown机制清理测试数据\n3. **全局变量**: 使用GlobalData管理测试过程中的临时数据\n4. **数据库事务**: 在数据库操作中使用事务保证数据一致性\n\n### Q8: 框架的扩展性如何体现？\n\n**答案:**\n1. **自定义函数**: 支持func_开头的自定义函数扩展\n2. **插件机制**: 基于pytest的插件体系\n3. **多项目支持**: 可以复制PyDemo创建新的项目包\n4. **协议支持**: 支持REST API和SOAP协议\n5. **报告定制**: 支持Allure报告的定制化\n\n### Q9: 如何进行接口性能测试？\n\n**答案:**\n虽然框架主要面向功能测试，但也具备基础性能测试能力：\n1. **并发执行**: 通过多线程/多进程实现并发请求\n2. **响应时间**: 记录接口响应时间\n3. **间隔控制**: 通过interval参数控制请求间隔\n4. **资源监控**: 可集成系统资源监控\n\n### Q10: 项目中遇到的技术难点和解决方案？\n\n**答案:**\n1. **复杂数据依赖**: 通过JSONPath和正则表达式实现灵活的数据提取和替换\n2. **SOAP协议支持**: 实现SoapParser类处理XML格式的SOAP响应\n3. **动态用例生成**: 从抓包数据自动解析生成标准化的测试用例\n4. **多环境管理**: 通过配置文件和动态加载实现环境无缝切换\n5. **测试报告**: 集成Allure实现丰富的可视化测试报告\n\n这个框架展现了完整的企业级接口自动化测试解决方案，涵盖了测试设计、执行、报告等全流程，是一个很好的面试项目案例。\n&quot;},{&quot;id&quot;:2,&quot;type&quot;:2,&quot;content&quot;:&quot;基于我对这个项目的深入分析，我来为你梳理这个接口自动化测试框架项目，并提供面试可能会问到的问题和答案：\n\n#  项目梳理总结\n\n##  项目概述\n\n这是一个基于 **Python3 + pytest + Requests + Allure + YAML + JSON** 实现的全链路接口自动化测试框架，支持多种测试场景和数据驱动。\n\n## ️ 项目架构\n\n### 核心目录结构\n```\nDemo_Test-master/\n├── PyDemo/                    # 主项目包\n│   ├── method_collection/     # 自定义函数集合\n│   ├── page/                  # 测试用例配置(YAML)\n│   ├── testcase/             # 生成的测试脚本(Python)\n│   └── data/                 # 测试数据\n├── comm/                     # 公共工具包\n│   ├── script/               # 脚本工具(日志、用例生成)\n│   ├── unit/                 # 核心单元(API发送、结果校验)\n│   └── utils/                # 工具类(数据库、随机数等)\n├── config/                   # 配置文件\n├── report/                   # 测试报告\n└── startup.py               # 启动入口\n```\n\n##  核心功能特性\n\n### 1. 多种运行模式 (auto_switch)\n- **0**: 直接运行测试，不生成用例\n- **1**: 根据手工编写用例自动生成测试脚本并运行\n- **2**: 根据抓包数据自动生成用例和脚本并运行  \n- **3**: 根据抓包数据生成用例和脚本但不运行\n\n### 2. 接口依赖处理\n- 支持前置接口预置\n- 自动处理数据依赖关系\n- 支持参数化引用 `${var}`\n\n### 3. 多种校验方式\n- **no_check**: 不校验\n- **check_code**: 仅校验状态码\n- **check_json**: JSON格式校验(默认)\n- **entirely_check**: 完整比较\n- **regular_check**: 正则匹配\n- **check_db**: 数据库校验\n\n### 4. 参数化支持\n- 变量引用: `${var}`\n- 函数助手: `$RandInt()`, `$GenGuid()`\n- 自定义函数: `func_xxx{\&quot;param1\&quot;:\&quot;value1\&quot;}`\n\n##  面试问题与答案\n\n### Q1: 请介绍一下这个自动化测试框架的整体架构？\n\n**答案:**\n这是一个分层架构的接口自动化测试框架：\n\n````python path=startup.py mode=EXCERPT\nif RC['auto_switch'] == 1:\n    logger.info(\&quot;Automatically generate test scripts based on hand-written use cases, and then run the tests!\&quot;)\n    writeCasev2.write_case(RC['scan_dir'], auto_yaml=False)\n````\n\n- **配置层**: 通过YAML文件管理环境配置、运行参数\n- **数据层**: YAML+JSON存储测试用例和测试数据\n- **逻辑层**: 核心处理单元，包括请求发送、结果校验、依赖处理\n- **执行层**: pytest驱动测试执行，支持并发和重试\n- **报告层**: Allure生成可视化测试报告\n\n### Q2: 框架是如何处理接口依赖的？\n\n**答案:**\n框架通过多种方式处理接口依赖：\n\n````yaml path=PyDemo/page/Portfolio/test_portfolio_create.yaml mode=EXCERPT\npremise: # [path key description]\n  - /Portfolio/test_portfolio_create.yaml\n  - Create a portfolio\n  - 创建一个portfolio以供后续添加子portfolio\n````\n\n1. **前置接口配置**: 在用例中配置premise字段，指定前置接口路径\n2. **数据依赖**: 通过`${变量名}`引用前置接口的响应数据\n3. **全局变量**: 使用GlobalData存储跨用例的共享数据\n4. **自动替换**: 框架自动解析和替换变量引用\n\n### Q3: 如何实现数据驱动测试？\n\n**答案:**\n框架采用YAML+JSON的数据驱动方式：\n\n````python path=PyDemo/testcase/Portfolio/test_portfolio_create.py mode=EXCERPT\n@pytest.mark.parametrize(\&quot;case_data\&quot;, case_dict[\&quot;test_case\&quot;])\ndef test_PortfolioCreate(self, case_data):\n````\n\n1. **YAML配置**: 存储接口基本信息和测试用例\n2. **JSON数据**: 存储复杂的请求参数和响应数据\n3. **参数化**: 使用pytest的parametrize装饰器实现数据驱动\n4. **动态生成**: 支持从抓包数据自动生成测试用例\n\n### Q4: 框架支持哪些类型的断言校验？\n\n**答案:**\n框架支持7种校验方式：\n\n````yaml path=PyDemo/page/Portfolio/test_portfolio_create.yaml mode=EXCERPT\ncheck_body:\n  check_type: check_json\n  expected_code: 200\n  expected_result:\n      - [\&quot;eq\&quot;, \&quot;$..name\&quot;, '${name}']\n      - [\&quot;gt\&quot;, \&quot;$..id\&quot;, 0]\n````\n\n1. **check_json**: 使用JSONPath进行灵活的JSON校验\n2. **check_db**: 数据库查询结果校验\n3. **entirely_check**: 完整响应比较\n4. **regular_check**: 正则表达式匹配\n5. **check_code**: 仅校验HTTP状态码\n6. **no_check**: 不进行校验\n7. **check_by_other_api**: 通过其他接口校验\n\n### Q5: 如何处理测试环境的切换？\n\n**答案:**\n框架通过配置文件实现环境切换：\n\n1. **项目配置**: apiConfig.yaml中配置不同环境的host等信息\n2. **数据库配置**: dbConfig.yaml配置不同环境的数据库连接\n3. **运行配置**: runConfig.yaml中指定当前运行的项目名\n4. **动态加载**: 根据project_name动态加载对应环境的配置\n\n### Q6: 框架的并发测试是如何实现的？\n\n**答案:**\n````python path=PyDemo/method_collection/Portfolio/Function.py mode=EXCERPT\ndef thread(n):\n    threads = []\n    for i in range(0, n):  # n 为并发数\n        t = threading.Thread(target=call_method, args=(\&quot;proposal\&quot;,))\n        threads.append(t)  # 添加线程到线程组\n````\n\n1. **pytest-xdist**: 使用pytest插件实现进程级并发\n2. **threading**: 在自定义函数中使用线程实现并发\n3. **配置控制**: 通过runConfig.yaml中的process参数控制并发数\n4. **失败重试**: 支持失败用例的自动重试机制\n\n### Q7: 如何保证测试数据的隔离性？\n\n**答案:**\n1. **随机数据**: 使用时间戳和随机字符串生成唯一测试数据\n2. **数据清理**: 支持teardown机制清理测试数据\n3. **全局变量**: 使用GlobalData管理测试过程中的临时数据\n4. **数据库事务**: 在数据库操作中使用事务保证数据一致性\n\n### Q8: 框架的扩展性如何体现？\n\n**答案:**\n1. **自定义函数**: 支持func_开头的自定义函数扩展\n2. **插件机制**: 基于pytest的插件体系\n3. **多项目支持**: 可以复制PyDemo创建新的项目包\n4. **协议支持**: 支持REST API和SOAP协议\n5. **报告定制**: 支持Allure报告的定制化\n\n### Q9: 如何进行接口性能测试？\n\n**答案:**\n虽然框架主要面向功能测试，但也具备基础性能测试能力：\n1. **并发执行**: 通过多线程/多进程实现并发请求\n2. **响应时间**: 记录接口响应时间\n3. **间隔控制**: 通过interval参数控制请求间隔\n4. **资源监控**: 可集成系统资源监控\n\n### Q10: 项目中遇到的技术难点和解决方案？\n\n**答案:**\n1. **复杂数据依赖**: 通过JSONPath和正则表达式实现灵活的数据提取和替换\n2. **SOAP协议支持**: 实现SoapParser类处理XML格式的SOAP响应\n3. **动态用例生成**: 从抓包数据自动解析生成标准化的测试用例\n4. **多环境管理**: 通过配置文件和动态加载实现环境无缝切换\n5. **测试报告**: 集成Allure实现丰富的可视化测试报告\n\n这个框架展现了完整的企业级接口自动化测试解决方案，涵盖了测试设计、执行、报告等全流程，是一个很好的面试项目案例。\n&quot;},{&quot;id&quot;:3,&quot;type&quot;:3,&quot;content&quot;:&quot;&quot;}],&quot;seen_state&quot;:&quot;seen&quot;,&quot;structured_request_nodes&quot;:[{&quot;id&quot;:1,&quot;type&quot;:1,&quot;tool_result_node&quot;:{&quot;content&quot;:&quot;Note:\nView range expanded to meet minimum size of 500 lines. End line adjusted to last line of file (109).\n\nHere's the result of running `cat -n` on PyDemo/testcase/Portfolio/test_portfolio_create.py:\n     1\t# -*- coding:utf-8 -*-\n     2\t# @File    : test_PortfolioCreate.py\n     3\t# ****************************\n     4\tfrom comm.script.writeLogs import logger\n     5\timport os\n     6\timport allure\n     7\timport pytest\n     8\t\n     9\tfrom comm.unit import replaceRelevance, apiSend\n    10\tfrom comm.utils import readYaml\n    11\tfrom comm.utils.readJson import update_json\n    12\tfrom comm.utils.readYaml import read_yaml_data\n    13\tfrom comm.unit.initializePremiseData import init_premise, merge_pre_and_current_params, \\\n    14\t    process_pre_test_info, read_json, call_functions\n    15\tfrom comm.unit.apiSend import send_request\n    16\tfrom comm.unit.checkResult import check_result, check_by_request\n    17\tfrom config import PAGE_DIR\n    18\t\n    19\tcase_yaml = os.path.realpath(__file__).replace('testcase', 'page').replace('.py', '.yaml')\n    20\tcase_path = os.path.dirname(case_yaml)\n    21\tcase_dict = read_yaml_data(case_yaml)\n    22\t\n    23\t\n    24\t@allure.epic(case_dict[\&quot;test_info\&quot;][\&quot;epic\&quot;])\n    25\t@allure.feature(case_dict[\&quot;test_info\&quot;][\&quot;feature\&quot;])\n    26\t@pytest.mark.usefixtures(\&quot;class_setup_and_teardown_fixture\&quot;)\n    27\tclass TestPortfoliocreate:\n    28\t    param_value = case_dict[\&quot;test_info\&quot;]  # 定义传递给 fixture 的参数\n    29\t\n    30\t    @allure.title(\&quot;{case_data[title]}\&quot;)\n    31\t    @pytest.mark.parametrize(\&quot;case_data\&quot;, case_dict[\&quot;test_case\&quot;])\n    32\t    @allure.story(\&quot;PortfolioCreate\&quot;)\n    33\t    def test_PortfolioCreate(self, case_data):\n    34\t        des = f\&quot;\&quot;\&quot;\n    35\t        &lt;h1&gt;{case_data[\&quot;title\&quot;]}&lt;/h1&gt;\n    36\t        &lt;table style=\&quot;width:100%\&quot; border=\&quot;1\&quot;&gt;\n    37\t            &lt;tbody&gt;\n    38\t                &lt;tr&gt;\n    39\t                    &lt;th&gt;Description&lt;/th&gt;\n    40\t                    &lt;td&gt;{case_data['describe'][\&quot;Description\&quot;]}&lt;/td&gt;\n    41\t                &lt;/tr&gt;\n    42\t                &lt;tr&gt;\n    43\t                    &lt;th&gt;Function Designer&lt;/th&gt;\n    44\t                    &lt;td&gt;{case_data['describe'][\&quot;FunctionDesigner\&quot;]}&lt;/td&gt;\n    45\t                &lt;/tr&gt;\n    46\t                &lt;tr&gt;\n    47\t                    &lt;th&gt;Author&lt;/th&gt;\n    48\t                    &lt;td&gt;{case_data['describe'][\&quot;Author\&quot;]}&lt;/td&gt;\n    49\t                &lt;/tr&gt;\n    50\t                &lt;tr&gt;\n    51\t                    &lt;th&gt;Create Date&lt;/th&gt;\n    52\t                    &lt;td&gt;{case_data['describe'][\&quot;CreateDate\&quot;]}&lt;/td&gt;\n    53\t                &lt;/tr&gt;\n    54\t            &lt;/tbody&gt;\n    55\t        &lt;/table&gt;\n    56\t        \&quot;\&quot;\&quot;\n    57\t        if case_data.get('skip', False):\n    58\t            pytest.skip('This test is skipped.')\n    59\t        allure.dynamic.description_html(des)\n    60\t        allure.dynamic.tag(case_data['tag'])\n    61\t        allure.dynamic.issue(case_data['issue'])\n    62\t        # 初始化请求：执行前置接口+替换关联变量\n    63\t        test_info, case_data, relevance = init_premise(case_dict[\&quot;test_info\&quot;], case_data, case_path, self.response_data)\n    64\t        # 发送当前接口\n    65\t        res, data = send_request(test_info, case_data)\n    66\t        # 替换期待值\n    67\t        relevance = merge_pre_and_current_params(case_data[\&quot;parameter\&quot;], data, relevance, \&quot;\&quot;)\n    68\t        expected_rs = replaceRelevance.replace(case_data['check_body'], relevance)\n    69\t        case_data['check_body'] = expected_rs\n    70\t        # 校验接口返回\n    71\t        try:\n    72\t            check_result(case_data, res.status_code, data)\n    73\t            case_info_copy = case_dict[\&quot;test_info\&quot;].copy()\n    74\t            case_data_copy = case_data.copy()\n    75\t            relevance_copy = relevance\n    76\t            data_copy = data\n    77\t            check_by_request(case_info_copy, case_data_copy, data_copy, relevance_copy)\n    78\t\n    79\t        except Exception as e:\n    80\t            logger.debug(e)\n    81\t            raise e\n    82\t        finally:\n    83\t            self.res_data = data\n    84\t            self.req_data = case_data['parameter']\n    85\t            teardown_case(case_data, data, self.response_data)\n    86\t\n    87\t\n    88\t@allure.step(\&quot;teardown function\&quot;)\n    89\tdef teardown_case(case_data, response_data, relevance):\n    90\t    data = response_data\n    91\t    __relevanceMer = merge_pre_and_current_params(case_data['parameter'], data, relevance)\n    92\t    case_data[\&quot;teardown\&quot;] = replaceRelevance.replace(case_data[\&quot;teardown\&quot;], __relevanceMer)\n    93\t    if case_data[\&quot;teardown\&quot;].get('premise', False):\n    94\t        # 执行当前测试用例的数据清理操作\n    95\t        for td in case_data[\&quot;teardown\&quot;][\&quot;premise\&quot;]:\n    96\t            case_path1 = PAGE_DIR + td[0]\n    97\t            case_data1 = readYaml.read_yaml_data(case_path1)\n    98\t            case = [my_dict for my_dict in case_data1[\&quot;test_case\&quot;] if\n    99\t                    \&quot;summary\&quot; in my_dict and my_dict[\&quot;summary\&quot;] == td[1]][0]\n   100\t            test_info = update_json(case_data1['test_info'], td[3])\n   101\t            case = update_json(case, td[3])\n   102\t            test_info = process_pre_test_info(test_info, __relevanceMer)\n   103\t            parameter = read_json(case['summary'], case['parameter'], case_path1)\n   104\t            parameter = replaceRelevance.replace(parameter, __relevanceMer)\n   105\t            case['parameter'] = parameter\n   106\t            response, res = apiSend.send_request(test_info, case, td[2])\n   107\t    if case_data[\&quot;teardown\&quot;].get('function', False):\n   108\t        # 执行当前测试用例的数据清理操作\n   109\t        call_functions(**case_data[\&quot;teardown\&quot;][\&quot;function\&quot;])\nTotal lines in file: 109\n&quot;,&quot;is_error&quot;:false,&quot;request_id&quot;:&quot;&quot;,&quot;tool_use_id&quot;:&quot;toolu_vrtx_014PnAoxDFbQZiH19UCzwpqE&quot;}},{&quot;id&quot;:2,&quot;type&quot;:4,&quot;ide_state_node&quot;:{&quot;workspaceFolders&quot;:[{&quot;repositoryRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;,&quot;folderRoot&quot;:&quot;/Users/fairy/Library/Containers/com.tencent.xinWeChat/Data/Library/Application Support/com.tencent.xinWeChat/2.0b4.0.9/be8153f4dbc3ca0ec7ea9baed9047786/Message/MessageTemp/9e20f478899dc29eb19741386f9343c8/File/Demo_Test-master&quot;}],&quot;workspaceFoldersUnchanged&quot;:false}}],&quot;timestamp&quot;:&quot;2025-06-13T04:01:55.587Z&quot;,&quot;response_text&quot;:&quot;基于我对这个项目的深入分析，我来为你梳理这个接口自动化测试框架项目，并提供面试可能会问到的问题和答案：\n\n#  项目梳理总结\n\n##  项目概述\n\n这是一个基于 **Python3 + pytest + Requests + Allure + YAML + JSON** 实现的全链路接口自动化测试框架，支持多种测试场景和数据驱动。\n\n## ️ 项目架构\n\n### 核心目录结构\n```\nDemo_Test-master/\n├── PyDemo/                    # 主项目包\n│   ├── method_collection/     # 自定义函数集合\n│   ├── page/                  # 测试用例配置(YAML)\n│   ├── testcase/             # 生成的测试脚本(Python)\n│   └── data/                 # 测试数据\n├── comm/                     # 公共工具包\n│   ├── script/               # 脚本工具(日志、用例生成)\n│   ├── unit/                 # 核心单元(API发送、结果校验)\n│   └── utils/                # 工具类(数据库、随机数等)\n├── config/                   # 配置文件\n├── report/                   # 测试报告\n└── startup.py               # 启动入口\n```\n\n##  核心功能特性\n\n### 1. 多种运行模式 (auto_switch)\n- **0**: 直接运行测试，不生成用例\n- **1**: 根据手工编写用例自动生成测试脚本并运行\n- **2**: 根据抓包数据自动生成用例和脚本并运行  \n- **3**: 根据抓包数据生成用例和脚本但不运行\n\n### 2. 接口依赖处理\n- 支持前置接口预置\n- 自动处理数据依赖关系\n- 支持参数化引用 `${var}`\n\n### 3. 多种校验方式\n- **no_check**: 不校验\n- **check_code**: 仅校验状态码\n- **check_json**: JSON格式校验(默认)\n- **entirely_check**: 完整比较\n- **regular_check**: 正则匹配\n- **check_db**: 数据库校验\n\n### 4. 参数化支持\n- 变量引用: `${var}`\n- 函数助手: `$RandInt()`, `$GenGuid()`\n- 自定义函数: `func_xxx{\&quot;param1\&quot;:\&quot;value1\&quot;}`\n\n##  面试问题与答案\n\n### Q1: 请介绍一下这个自动化测试框架的整体架构？\n\n**答案:**\n这是一个分层架构的接口自动化测试框架：\n\n````python path=startup.py mode=EXCERPT\nif RC['auto_switch'] == 1:\n    logger.info(\&quot;Automatically generate test scripts based on hand-written use cases, and then run the tests!\&quot;)\n    writeCasev2.write_case(RC['scan_dir'], auto_yaml=False)\n````\n\n- **配置层**: 通过YAML文件管理环境配置、运行参数\n- **数据层**: YAML+JSON存储测试用例和测试数据\n- **逻辑层**: 核心处理单元，包括请求发送、结果校验、依赖处理\n- **执行层**: pytest驱动测试执行，支持并发和重试\n- **报告层**: Allure生成可视化测试报告\n\n### Q2: 框架是如何处理接口依赖的？\n\n**答案:**\n框架通过多种方式处理接口依赖：\n\n````yaml path=PyDemo/page/Portfolio/test_portfolio_create.yaml mode=EXCERPT\npremise: # [path key description]\n  - /Portfolio/test_portfolio_create.yaml\n  - Create a portfolio\n  - 创建一个portfolio以供后续添加子portfolio\n````\n\n1. **前置接口配置**: 在用例中配置premise字段，指定前置接口路径\n2. **数据依赖**: 通过`${变量名}`引用前置接口的响应数据\n3. **全局变量**: 使用GlobalData存储跨用例的共享数据\n4. **自动替换**: 框架自动解析和替换变量引用\n\n### Q3: 如何实现数据驱动测试？\n\n**答案:**\n框架采用YAML+JSON的数据驱动方式：\n\n````python path=PyDemo/testcase/Portfolio/test_portfolio_create.py mode=EXCERPT\n@pytest.mark.parametrize(\&quot;case_data\&quot;, case_dict[\&quot;test_case\&quot;])\ndef test_PortfolioCreate(self, case_data):\n````\n\n1. **YAML配置**: 存储接口基本信息和测试用例\n2. **JSON数据**: 存储复杂的请求参数和响应数据\n3. **参数化**: 使用pytest的parametrize装饰器实现数据驱动\n4. **动态生成**: 支持从抓包数据自动生成测试用例\n\n### Q4: 框架支持哪些类型的断言校验？\n\n**答案:**\n框架支持7种校验方式：\n\n````yaml path=PyDemo/page/Portfolio/test_portfolio_create.yaml mode=EXCERPT\ncheck_body:\n  check_type: check_json\n  expected_code: 200\n  expected_result:\n      - [\&quot;eq\&quot;, \&quot;$..name\&quot;, '${name}']\n      - [\&quot;gt\&quot;, \&quot;$..id\&quot;, 0]\n````\n\n1. **check_json**: 使用JSONPath进行灵活的JSON校验\n2. **check_db**: 数据库查询结果校验\n3. **entirely_check**: 完整响应比较\n4. **regular_check**: 正则表达式匹配\n5. **check_code**: 仅校验HTTP状态码\n6. **no_check**: 不进行校验\n7. **check_by_other_api**: 通过其他接口校验\n\n### Q5: 如何处理测试环境的切换？\n\n**答案:**\n框架通过配置文件实现环境切换：\n\n1. **项目配置**: apiConfig.yaml中配置不同环境的host等信息\n2. **数据库配置**: dbConfig.yaml配置不同环境的数据库连接\n3. **运行配置**: runConfig.yaml中指定当前运行的项目名\n4. **动态加载**: 根据project_name动态加载对应环境的配置\n\n### Q6: 框架的并发测试是如何实现的？\n\n**答案:**\n````python path=PyDemo/method_collection/Portfolio/Function.py mode=EXCERPT\ndef thread(n):\n    threads = []\n    for i in range(0, n):  # n 为并发数\n        t = threading.Thread(target=call_method, args=(\&quot;proposal\&quot;,))\n        threads.append(t)  # 添加线程到线程组\n````\n\n1. **pytest-xdist**: 使用pytest插件实现进程级并发\n2. **threading**: 在自定义函数中使用线程实现并发\n3. **配置控制**: 通过runConfig.yaml中的process参数控制并发数\n4. **失败重试**: 支持失败用例的自动重试机制\n\n### Q7: 如何保证测试数据的隔离性？\n\n**答案:**\n1. **随机数据**: 使用时间戳和随机字符串生成唯一测试数据\n2. **数据清理**: 支持teardown机制清理测试数据\n3. **全局变量**: 使用GlobalData管理测试过程中的临时数据\n4. **数据库事务**: 在数据库操作中使用事务保证数据一致性\n\n### Q8: 框架的扩展性如何体现？\n\n**答案:**\n1. **自定义函数**: 支持func_开头的自定义函数扩展\n2. **插件机制**: 基于pytest的插件体系\n3. **多项目支持**: 可以复制PyDemo创建新的项目包\n4. **协议支持**: 支持REST API和SOAP协议\n5. **报告定制**: 支持Allure报告的定制化\n\n### Q9: 如何进行接口性能测试？\n\n**答案:**\n虽然框架主要面向功能测试，但也具备基础性能测试能力：\n1. **并发执行**: 通过多线程/多进程实现并发请求\n2. **响应时间**: 记录接口响应时间\n3. **间隔控制**: 通过interval参数控制请求间隔\n4. **资源监控**: 可集成系统资源监控\n\n### Q10: 项目中遇到的技术难点和解决方案？\n\n**答案:**\n1. **复杂数据依赖**: 通过JSONPath和正则表达式实现灵活的数据提取和替换\n2. **SOAP协议支持**: 实现SoapParser类处理XML格式的SOAP响应\n3. **动态用例生成**: 从抓包数据自动解析生成标准化的测试用例\n4. **多环境管理**: 通过配置文件和动态加载实现环境无缝切换\n5. **测试报告**: 集成Allure实现丰富的可视化测试报告\n\n这个框架展现了完整的企业级接口自动化测试解决方案，涵盖了测试设计、执行、报告等全流程，是一个很好的面试项目案例。\n&quot;,&quot;workspace_file_chunks&quot;:[]}],&quot;feedbackStates&quot;:{&quot;temp-fe-6efa62ab-3de3-4de6-aa0b-a9c5364d8a34&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-33eaa60c-7595-47ea-9e6f-64a199e6b0b3&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-f90e0570-8f26-42c5-902d-09c948436682&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-56a903bb-fd54-4303-9eec-61f0e93d68a8&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-533bf814-4916-4ad7-9c4e-2132fb18d12e&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-8b7ff1e3-ad70-4d08-85c8-8cddb1a0fc2c&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-de8ac66f-4536-44e8-abd0-bffa6560ea72&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-65ed2ed9-0163-42df-bac6-a4e31a3ceb7a&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-1e498ce0-9bd8-4be6-8c43-d4a3f47244f9&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-7529edab-f2c9-4dac-a722-c96db335dcc9&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-b6cdad3f-7753-400c-9e13-abcfcf579e6b&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-4b71473a-978b-40b2-adab-663f8c812907&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-d2260493-0a95-431c-bee2-c6f0258c4cb8&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-ff048823-36fd-40b4-876f-e30e43a62da4&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;},&quot;temp-fe-eb1982d9-e139-41e4-be62-5089cd0ea8ea&quot;:{&quot;selectedRating&quot;:0,&quot;feedbackNote&quot;:&quot;&quot;}},&quot;toolUseStates&quot;:{&quot;ffacc6ff-577c-4362-a855-7d046d094c2a;toolu_vrtx_01Y9RyEnGDZ8ypMSvYejqWmA&quot;:{&quot;requestId&quot;:&quot;ffacc6ff-577c-4362-a855-7d046d094c2a&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01Y9RyEnGDZ8ypMSvYejqWmA&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in ., excluding hidden items:\n./PyDemo\n./PyDemo/__init__.py\n./PyDemo/__pycache__\n./PyDemo/data\n./PyDemo/method_collection\n./PyDemo/page\n./PyDemo/testcase\n./README.md\n./__pycache__\n./__pycache__/run_rf_case.cpython-37-pytest-6.2.5.pyc\n./__pycache__/run_rf_case.cpython-37-pytest-7.2.2.pyc\n./__pycache__/test.cpython-37-pytest-6.2.5.pyc\n./aaaaa.py\n./comm\n./comm/__init__.py\n./comm/__pycache__\n./comm/script\n./comm/unit\n./comm/utils\n./config\n./config/FunctionTemplate.py\n./config/__init__.py\n./config/__pycache__\n./config/apiConfig.yml\n./config/dbConfig.yml\n./config/runConfig.yml\n./config/test_template.py\n./data_warehouse\n./data_warehouse/download\n./data_warehouse/source\n./data_warehouse/upload\n./log.html\n./logs\n./logs/2023-05-16.log\n./logs/2023-05-16_error.log\n./logs/2023-05-17.log\n./logs/2023-05-17_error.log\n./logs/2023-05-22.log\n./logs/2023-05-22_error.log\n./logs/2023-05-23.log\n./logs/2023-05-23_error.log\n./logs/2023-05-24.log\n./logs/2023-05-24_error.log\n./logs/2023-05-30.log\n./logs/2023-05-30_error.log\n./logs/2023-06-05.log\n./logs/2023-06-05_error.log\n./logs/2023-06-06.log\n./logs/2023-06-06_error.log\n./logs/2023-06-07.log\n./logs/2023-06-07_error.log\n./logs/2023-06-08.log\n./logs/2023-06-08_error.log\n./logs/2023-06-09.log\n./logs/2023-06-09_error.log\n./logs/2023-07-05.log\n./logs/2023-07-05_error.log\n./output.xml\n./report\n./report.html\n./report/html\n./report/pushDing.py\n./report/xml\n./requirements.txt\n./startup.py\n./venv\n./venv/Lib\n./venv/Scripts\n./venv/include\n./venv/pyvenv.cfg\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;137466cf-3866-4006-96b7-1e1746bf7904;toolu_vrtx_01JJEq67pqTCPiqxiAp9Yh45&quot;:{&quot;requestId&quot;:&quot;137466cf-3866-4006-96b7-1e1746bf7904&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01JJEq67pqTCPiqxiAp9Yh45&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on README.md:\n     1\t# 使用前准备：\n     2\t    1、安装配置python3.6版本及以上环境和pycharm\n     3\t        安装与配置可参考：https://blog.csdn.net/ling_mochen/article/details/79314118/\n     4\t    2、安装allure环境 并配置环境变量 （allure安装包在data_warehouse/source目录下）\n     5\t        安装与配置可参考：https://www.cnblogs.com/strive-2020/p/12630067.html\n     6\t    3、pip install -r requirements.txt \n     7\t    （安装不成功的进行单个手动添加，或者更换pip源：pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple）\n     8\t    4、去掉allure报告title后的参数化显示：文件位置：Lib\\site-packages\\allure_pytest\\listener.py （第三方包所在的LIb目录） \n     9\t    将test_result.parameters.extend(........) 中参数改成空列表就行了[],修改后-test_result.parameters.extend([])\n    10\t\n    11\t**此框架是基于Python3+pyTest+Requests+Allure+Yaml+Json实现全链路接口自动化测试。**\n    12\t\n    13\t# 主要流程：\n    14\t\n    15\t## 1）抓包的接口\n    16\t解析接口数据包 -&gt;生成接口基础配置(yml) -&gt;生成测试用例(yaml+json) -&gt;生成测试脚本(.py) -&gt;运行测试(pytest) -&gt;生成测试报告(allure)\n    17\t## 2）手工编写的接口用例\n    18\t手工根据规则编写测试用例(yaml+json) -&gt;生成测试脚本(.py) -&gt;运行测试(pytest) -&gt;生成测试报告(allure)\n    19\t\n    20\t# 测试流程：\n    21\t\n    22\t初始化请求 -&gt;处理接口基础信息 -&gt;读取前置接口用例 -&gt;发送前置接口 -&gt;处理当前接口数据 -&gt;发送当前接口 -&gt;检查接口返回\n    23\t\n    24\t# 接口自动化测试框架介绍：\n    25\t\n    26\t## 关于接口依赖：\n    27\t    支持前置接口预置，填写前置接口相对路径即可，如果存在数据依赖关系，此时你也仅需要填写前置接口对应的参数值，本框架将自动为你调用和替换关联数据。\n    28\t\t\t\t1、前置接口配置：\n    29\t\t\t\t  1）项目文件的page目录下有comeCase.yaml 公用测试用例文件，前置写这个文件类的接口时，配置： premise: /commonCase.yaml xxx接口 测试数据索引(从0开始);\n    30\t\t\t\t  2）也支持填写已有接口，从测试文件中去数据，配置：premise: /xxx/xxxx.yaml _ 测试数据索引(从0开始)\n    31\t\t\t\t2、前置接口数据依赖：\n    32\t\t\t\t  引用见下面---_关于参数化_\n    33\t\t\t\t3、test_info和case_data的premise优先级：\n    34\t\t\t\t    两个同时配置，优先case_data\n    35\t\n    36\t## 关于测试数据：\n    37\t    本框架采用yaml记录接口基本信息，当请求参数和结果较大时，将单独保存到json文件中，解决各类数据的错综复杂问题。\n    38\t\n    39\t## 关于参数化：\n    40\t    本框架采用常用工具使用的变量标识 ${var} ，通过正则表达式，自动检索变量，自动为你替换变量，并且为你提供多种函数助手【$RandInt()、$GenGuid()】等，生成一些随机的伪数据，解决各种数据问题。\n    41\t            参数引用：\n    42\t                1)前置接口的请求参数以及配置文件里的参数 ${xxx}\n    43\t                2)前置接口的响应参数\n    44\t                    response：{'code': 0, 'msg': 'OK', 'id': 100100, 'data': {'id': 127409, 'member_id': 1236921938, 'title': '新增一个项目', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5, 'create_time': '2021-10-09 11:05:46.0', 'bidding_start_time': None, 'full_time': None, 'status': 1}, \n    45\t                    'copyright': 'Copyright © 2017-2020  All Rights Reserved', \n    46\t                    'parameter': {'member_id': '1236921938', 'title': '新增一个项目', 'amount': 6300.0, 'loan_rate': 12.0, 'loan_term': 12, 'loan_date_type': 1, 'bidding_days': 5}}\n    47\t                   例：要引用data下的id ${data_id} 以节点加_进行引用\n    48\t                       要引用无父节点的就直接${code}\n    49\t                3)数据库断言的时候不用遵循父节点的写法 直接${id} 如果遇到重复key只会引用第一个匹配的key，如果需要引用有父节点的可以联系我帮你修改一下\n    50\t## 关于自定义函数调用\n    51\t    以func_开头的自定义函数可进行传参调用，会自动进行查找，在函数体内需要返回调用结果\n    52\t    引用方法 param: func_xxx{\&quot;params1\&quot;:\&quot;参数一\&quot;,\&quot;params2\&quot;:\&quot;参数二\&quot;}   函数名和传入的参数之间不能用空格\n    53\t\n    54\t## 关于用例执行：\n    55\t    本框架利用pytest扩展库，支持多线程模式、失败用例重试、用例模糊匹配等。\n    56\t\n    57\t## 关于数据校验：本框架支持多种校验方式(5种)\n    58\t\t1） no_check：不做任何校验\n    59\t\t    例：\n    60\t              check_body:\n    61\t                check_type: no_check\n    62\t                expected_code: 200（随意写value也可空着，但key必须保留）\n    63\t                expected_result: 随意写value也可空着，但key必须保留\n    64\t\n    65\t\t2） check_code：仅校验接口返回码code\n    66\t\t    例：\n    67\t              check_body:\n    68\t                check_type: check_code\n    69\t                expected_code: 200\n    70\t                expected_result: 随意写value也可空着，但key必须保留\n    71\t\n    72\t\t3） check_json：校验接口返回码code，并进行json格式比较及校验返回结果（默认方式）\n    73\t\t    例：\n    74\t              check_body:\n    75\t                check_type: check_json\n    76\t                expected_code: 200\n    77\t                expected_result:\n    78\t                  - [\&quot;gt\&quot;, \&quot;code\&quot;, -1]\n    79\t                  - [\&quot;not_none\&quot;, \&quot;message\&quot;, \&quot;SUCCESS\&quot;]\n    80\t                  - [\&quot;!=\&quot;, \&quot;$..signatories\&quot;, 2]\n    81\t\n    82\t\t4） entirely_check：校验接口返回码code，并进行完整比较返回结果\n    83\t\t    例：\n    84\t              check_body:\n    85\t                check_type: entirely_check\n    86\t                expected_code: 200\n    87\t                expected_result: {'code': 0, 'msg': 'OK'}\n    88\t\n    89\t\t5） regular_check：校验接口返回码code，并进行正则匹配返回结果\n    90\t\t    例：\n    91\t              check_body:\n    92\t                check_type: regular_check\n    93\t                expected_code: 200\n    94\t                expected_result: \n    95\t                   - \&quot;'code': 0\&quot;\n    96\t                   - SUCCESS\n    97\t\t\n    98\t\t6） check_db：数据库校验\n    99\t\t    例：\n   100\t              check_db:\n   101\t                  - check_type: check_db\n   102\t                    execute_sql: SELECT * FROM loan WHERE id ='${id}'\n   103\t                    expected_result:\n   104\t                      - amount: ${amount}  （字段名和值）\n   105\t                    expected_num: 1  （查询结果行数校验）\n   106\t                    \n   107\t## 关于环境切换：\n   108\t    本框架支持环境切换，只需增加修改配置文件\n   109\t\t1）默认项目名称：PyDemo （用于大部分项目支持）\n   110\t\t2）如果有项目对断言以及用例修改校大，可以复制PyDemo项目，重新生成一个项目包，如：PyDemoFW ，没有复制新的项目包会默认使用PyDemo项目的数据\n   111\t\t3）修改配置：\n   112\t\t\t- apiConfig.yaml 【项目配置】 复制一份默认项目配置，在文件下粘贴，修改键名为你需要运行的项目名；\n   113\t\t\t- dbConfig.yaml 【数据库配置】同上\n   114\t\t\t- requestConfig.yaml 【处理后写入的数据键值对】同上 这里的值不需要去修改，运行项目时后自动修改，可根据需求，可不用此配置\n   115\t\t\t- runConfig.yaml 【运行配置】 对应修改项目名，其他内容按需修改\n   116\t\n   117\t\n   118\t# 运行配置说明：\n   119\t\n   120\t    运行项目名 project_name: PyDemo \n   121\t    \n   122\t    运行模式: auto_switch: 2\n   123\t    \n   124\t    0 - 不开启自动生成测试用例功能，将直接运行测试\n   125\t    \n   126\t    1 - 根据手工编写用例，自动生成测试脚本，然后运行测试\n   127\t    \n   128\t    2 - 根据接口抓包数据，自动生成测试用例和测试脚本，然后运行测试\n   129\t    \n   130\t    3 - 根据接口抓包数据，自动生成测试用例和测试脚本，但不运行测试\n   131\t    \n   132\t    注意：目前解析仅支持(.chlsj)格式，请使用Charles工具抓包导出JSON Session File\n   133\t    \n   134\t    扫描测试用例目录（且仅当auto_switch=1时有用） scan_dir:\n   135\t    \n   136\t    使用模糊匹配测试用例（空则匹配所有） pattern:\n   137\t    \n   138\t    执行并发线程数（0表示不开启） process: 0\n   139\t    \n   140\t    失败重试次数（0表示不重试） reruns: 0\n   141\t    \n   142\t    本轮测试最大允许失败数（超出则立即结束测试） maxfail: 20\n   143\t    \n   144\t    接口调用间隔时间（s） interval: 1\n   145\t\n   146\t\n   147\t--- \n   148\t---\n   149\t版权归 xuanyu liu 所有示例的接口仅做参考，不可进行压测并发调用\n   150\t\n   151\t\nTotal lines in file: 151\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;30e2f55f-4b73-458d-ad08-74f8217d9ef7;toolu_vrtx_01PEEnsXJqKjsbHuAqJzm9dB&quot;:{&quot;requestId&quot;:&quot;30e2f55f-4b73-458d-ad08-74f8217d9ef7&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01PEEnsXJqKjsbHuAqJzm9dB&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in config, excluding hidden items:\nconfig/FunctionTemplate.py\nconfig/__init__.py\nconfig/__pycache__\nconfig/__pycache__/__init__.cpython-37.pyc\nconfig/apiConfig.yml\nconfig/dbConfig.yml\nconfig/runConfig.yml\nconfig/test_template.py\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;152c4987-cec9-45b1-9abc-b88526a85072;toolu_vrtx_01Fgxb1Ln2NTm5xhFsFufK5D&quot;:{&quot;requestId&quot;:&quot;152c4987-cec9-45b1-9abc-b88526a85072&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01Fgxb1Ln2NTm5xhFsFufK5D&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on config/runConfig.yml:\n     1\t# Run project name\n     2\tproject_name: PyDemo\n     3\t\n     4\t# Running mode:\n     5\tauto_switch: 1\n     6\t# 0 - Do not enable automatic test case generation and run tests directly\n     7\t# 1 - Automatically generate test scripts based on manual use cases, and then run tests\n     8\t\n     9\t\n    10\t# Scan test case directory (useful only if auto_switch=1) (script re will be performed for use cases where no test script has been written)\n    11\tscan_dir: \&quot;\&quot;\n    12\t\n    13\t# Use fuzzy matching test cases (blank matches all)\n    14\tpattern: \&quot;Sync_portfolio_hierarchy_info_to_Octane_product_filed\&quot;\n    15\t\n    16\t# Number of concurrent threads executing (0 means disabled)\n    17\tprocess: 0\n    18\t\n    19\t# Number of failed retries (0 indicates no retries)\n    20\treruns: 0\n    21\t\n    22\t# Maximum number of failures allowed in the current round (if you exceed this number, end the test immediately)\n    23\tmaxfail: 200\n    24\t\n    25\t# Interface call interval (s)\n    26\tinterval: 1\n    27\t\n    28\t# skip the use case set . Such as: test_ContractCreateByCategory yaml this use case set, is included in the list below written [\&quot;TestContractCreateByCategory \&quot;] can skip multiple commas\n    29\tskip_classes:\n    30\t#  - TestBusinessgoalcreate\n    31\t\n    32\tskip_methods:\n    33\t#  {\&quot;TestBusinessgoalcreate\&quot;: [\&quot;test_ParentGoalWithPrivateKPI\&quot;]}\n    34\t\n    35\t\n    36\tDescription of verification methods of test results (there are 7 methods) :\n    37\t\n    38\t# no_check: no check is performed\n    39\t\n    40\t# check_code: indicates only the return code of the interface\n    41\t\n    42\t# check_json: indicates the return code of the check interface, and compares the return result with the json format (default).\n    43\t\n    44\t# entirely_check: Check interface return code, complete comparison return result\n    45\t\n    46\t# regular_check: The regular_check interface returns the code, and the regular_check interface returns the result\n    47\t\n    48\t# check_db: verifies the database\n    49\t\n    50\t# check_by_other_api:\n    51\t\nTotal lines in file: 51\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;4407a460-9392-4591-8791-09b39a30bedf;toolu_vrtx_01Jk5x2kvYsEhD22YLD6TrDG&quot;:{&quot;requestId&quot;:&quot;4407a460-9392-4591-8791-09b39a30bedf&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01Jk5x2kvYsEhD22YLD6TrDG&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in PyDemo, excluding hidden items:\nPyDemo/__init__.py\nPyDemo/__pycache__\nPyDemo/__pycache__/__init__.cpython-37.pyc\nPyDemo/data\nPyDemo/data/login.chlsj\nPyDemo/method_collection\nPyDemo/method_collection/Business_Goal\nPyDemo/method_collection/Portfolio\nPyDemo/method_collection/SPM\nPyDemo/method_collection/UserManagement\nPyDemo/method_collection/What-if Analysis\nPyDemo/method_collection/__init__.py\nPyDemo/method_collection/__pycache__\nPyDemo/method_collection/contract\nPyDemo/method_collection/document\nPyDemo/method_collection/login\nPyDemo/method_collection/registerFunction.py\nPyDemo/page\nPyDemo/page/Business_Goal\nPyDemo/page/Portfolio\nPyDemo/page/SPM\nPyDemo/page/UserManagement\nPyDemo/page/What-if Analysis\nPyDemo/page/program\nPyDemo/page/proposal\nPyDemo/testcase\nPyDemo/testcase/Business_Goal\nPyDemo/testcase/Portfolio\nPyDemo/testcase/SPM\nPyDemo/testcase/UserManagement\nPyDemo/testcase/What-if Analysis\nPyDemo/testcase/__pycache__\nPyDemo/testcase/conftest.py\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;7ea08e84-170d-40f2-8e1b-bba46979d4a9;toolu_vrtx_01SS3JTNpMhhDHMmSLDTv1P1&quot;:{&quot;requestId&quot;:&quot;7ea08e84-170d-40f2-8e1b-bba46979d4a9&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01SS3JTNpMhhDHMmSLDTv1P1&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on PyDemo/method_collection/Portfolio/Function.py:\n     1\timport time\n     2\t\n     3\timport jsonpath\n     4\t\n     5\tfrom comm.script.writeLogs import logger\n     6\tfrom PyDemo.method_collection import request_in_a_function\n     7\tfrom comm.unit.GlobalVariable import GlobalData\n     8\tfrom comm.utils.SoapParser import xml_to_dict, SoapParser\n     9\tfrom comm.utils.databaseExecute import Database\n    10\tfrom comm.utils.randomly import *\n    11\tfrom config import PROJECT_NAME, AC\n    12\t\n    13\t\n    14\tdef func_demo_function_name(**kwargs):\n    15\t    # dicts are lists of information set as global variables\n    16\t    # {\&quot;name\&quot;: \&quot;Variable name\&quot;, \&quot;jsonpath\&quot;: \&quot;jsonpath expression\&quot;}\n    17\t    # tips: 1.You can also set global variables before executing the current function if necessary\n    18\t    #         setattr(GlobalData.local_data.namespace, \&quot;variable name\&quot;, \&quot;variable value\&quot;)\n    19\t    #       2.You can also modify the input keyword parameters(kwargs)\n    20\t    #         and then pass the parameters into request_in_a_function\n    21\t\n    22\t    dicts = [{\&quot;name\&quot;: \&quot;GD_userName\&quot;, \&quot;jsonpath\&quot;: \&quot;$..userName\&quot;},\n    23\t             {\&quot;name\&quot;: \&quot;GD_userId\&quot;, \&quot;jsonpath\&quot;: \&quot;$..userId\&quot;}]\n    24\t    request_in_a_function(r\&quot;UserManagement/User/test_user_add.yaml\&quot;, \&quot;UserAdd2\&quot;,\n    25\t                          \&quot;create_user_with_specified_license[PortfolioUser]_and_security_group\&quot;, dicts, **kwargs)\n    26\t\n    27\t\n    28\tdef create_data(hierarchy):\n    29\t    \&quot;\&quot;\&quot;\n    30\t    input_data = {\n    31\t        \&quot;type\&quot;: \&quot;portfolio\&quot;,\n    32\t        \&quot;name\&quot;: \&quot;ws_TOP_portfolio\&quot;,\n    33\t        \&quot;strategicThemes\&quot;: [\n    34\t            {\n    35\t                \&quot;name\&quot;: \&quot;Top_st\&quot;,\n    36\t                \&quot;parent\&quot;: \&quot;\&quot;,\n    37\t                \&quot;color\&quot;: \&quot;#6890CB\&quot;,\n    38\t                \&quot;children\&quot;: [],\n    39\t                \&quot;businessGoals\&quot;: []\n    40\t            }\n    41\t        ],\n    42\t        \&quot;children\&quot;: [\n    43\t            {\n    44\t                \&quot;type\&quot;: \&quot;portfolio\&quot;,\n    45\t                \&quot;name\&quot;: \&quot;ws_sub_portfolio1\&quot;,\n    46\t                \&quot;children\&quot;: [\n    47\t                    {\n    48\t                        \&quot;type\&quot;: \&quot;portfolio\&quot;,\n    49\t                        \&quot;name\&quot;: \&quot;ws_sub_sub_portfolio1\&quot;,\n    50\t                        \&quot;children\&quot;: []\n    51\t                    },\n    52\t                    {\n    53\t                        \&quot;type\&quot;: \&quot;proposal\&quot;,\n    54\t                        \&quot;name\&quot;: \&quot;nested_proposal\&quot;\n    55\t                    }\n    56\t                ]\n    57\t            },\n    58\t            {\n    59\t                \&quot;type\&quot;: \&quot;proposal\&quot;,\n    60\t                \&quot;name\&quot;: \&quot;ws_proposal\&quot;\n    61\t            },\n    62\t            {\n    63\t                \&quot;type\&quot;: \&quot;program\&quot;,\n    64\t                \&quot;name\&quot;: \&quot;ws_program\&quot;\n    65\t            }\n    66\t        ]\n    67\t    }\n    68\t    \&quot;\&quot;\&quot;\n    69\t    def create_node(name, type, parent):\n    70\t        node = {\n    71\t            \&quot;name\&quot;: name,\n    72\t            \&quot;type\&quot;: type,\n    73\t            \&quot;parent\&quot;: parent,\n    74\t            \&quot;children\&quot;: []\n    75\t        }\n    76\t        timestamp = generate_timestamp()\n    77\t        # 根据类型调用不同的接口\n    78\t        if node[\&quot;type\&quot;] == \&quot;portfolio\&quot;:\n    79\t            dicts = [{\&quot;name\&quot;: f\&quot;GD_{name}_name\&quot;, \&quot;jsonpath\&quot;: \&quot;$..name\&quot;},\n    80\t                     {\&quot;name\&quot;: f\&quot;GD_{name}_id\&quot;, \&quot;jsonpath\&quot;: \&quot;$..id\&quot;}]\n    81\t            code, data = request_in_a_function(r\&quot;/Portfolio/test_portfolio_create.yaml\&quot;, \&quot;Create a portfolio\&quot;,\n    82\t                                  \&quot;create portfolio\&quot;, setGloable=dicts, name=name+str(timestamp))\n    83\t\n    84\t            if parent is not None:\n    85\t                code, data = request_in_a_function(r\&quot;/Portfolio/PortfolioContent/test_content_add.yaml\&quot;,\n    86\t                                                   \&quot;Add a sub-portfolio to portfolio\&quot;, f\&quot;Add \&quot;, usePremise=False,\n    87\t                                                   new_path=\&quot;/itg/rest2/portfolios/${\&quot; + f\&quot;GD_{parent['name']}_id\&quot; + \&quot;}/contents/subPortfolios\&quot;,\n    88\t                                                   childPortfolioId=data[\&quot;data\&quot;]['id'])\n    89\t        # 调用与portfolio相关的接口\n    90\t        # ...\n    91\t        elif node[\&quot;type\&quot;] == \&quot;proposal\&quot;:\n    92\t            dicts = [{\&quot;name\&quot;: f\&quot;GD_{name}_name\&quot;, \&quot;jsonpath\&quot;: \&quot;$..name\&quot;},\n    93\t                     {\&quot;name\&quot;: f\&quot;GD_{name}_id\&quot;, \&quot;jsonpath\&quot;: \&quot;$..id\&quot;}]\n    94\t            code, data = request_in_a_function(r\&quot;/proposal/proposal_create.yaml\&quot;, \&quot;Create a proposal\&quot;,\n    95\t                                  \&quot;create proposal\&quot;, setGloable=dicts, kwargs={\&quot;$..*[?(@.token=='REQ.DESCRIPTION')].stringValue\&quot;:name+str(timestamp),\n    96\t                                                                               \&quot;$..*[?(@.token=='REQ.KNTA_PROJECT_NAME')].stringValue\&quot;:name+str(timestamp)})\n    97\t            # # 进行与parent关联的操作\n    98\t            if parent is not None:\n    99\t                    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Get fsId by ppaId\&quot;,\n   100\t                                          f\&quot;Get fsId [{data['ns2:request']['id']}]\&quot;,\n   101\t                                          kwargs={\&quot;fm:parentType\&quot;: node[\&quot;type\&quot;].upper(), \&quot;fm:id\&quot;: data['ns2:request']['id']})\n   102\t                    # data = xml_to_dict(data)\n   103\t                    fsId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   104\t                    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Add ppa to portfolio\&quot;,\n   105\t                                          f\&quot;Add ppa [{node['type']}:{name}] to portfolio\&quot;, new_path=\&quot;/itg/rest2/portfolios/${\&quot; + f\&quot;GD_{node['parent']['name']}_id\&quot; + \&quot;}/contents/ppas\&quot;,\n   106\t                                          fsId=fsId)\n   107\t\n   108\t        elif node[\&quot;type\&quot;] == \&quot;program\&quot;:\n   109\t            code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create a program by soap\&quot;,\n   110\t                                               f\&quot;create a program [{node['name']}] by soap api \&quot;,\n   111\t                                               kwargs={\&quot;ns1:name\&quot;: node[\&quot;name\&quot;] + str(timestamp)})\n   112\t            programId = SoapParser().get_first_element_body_by_name(data, \&quot;programId\&quot;)\n   113\t            setattr(GlobalData.local_data.namespace, f\&quot;GD_{node['name']}_id\&quot;, programId)\n   114\t            code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;update program to enable add to portfolio\&quot;,\n   115\t                                               f\&quot;update program to enable add to portfolio \&quot;, id=programId)\n   116\t            code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   117\t                                               \&quot;add program to portfolio without update program setting\&quot;,\n   118\t                                               f\&quot;add program to portfolio without update program setting \&quot;,\n   119\t                                               new_path=\&quot;/itg/rest2/portfolios/${\&quot; + f\&quot;GD_{node['parent']['name']}_id\&quot; + \&quot;}/contents/programs\&quot;,\n   120\t                                               programId=programId)\n   121\t        return node\n   122\t\n   123\t    def add_child(parent, child):\n   124\t        parent[\&quot;children\&quot;].append(child)\n   125\t\n   126\t    def create_hierarchy(data, parent=None):\n   127\t        node = create_node(data[\&quot;name\&quot;], data[\&quot;type\&quot;], parent)\n   128\t\n   129\t        if parent is not None:\n   130\t            add_child(parent, node)\n   131\t\n   132\t        for child_data in data.get(\&quot;children\&quot;, []):\n   133\t            create_hierarchy(child_data, node)\n   134\t\n   135\t        return node\n   136\t\n   137\t\n   138\t    # 创建层级结构并关联\n   139\t    hierarchy = create_hierarchy(hierarchy)\n   140\t\n   141\t\n   142\tdef batch_create_data():\n   143\t    input_data = {\n   144\t        \&quot;type\&quot;: \&quot;portfolio\&quot;,\n   145\t        \&quot;name\&quot;: \&quot;ws_TOP_ADM\&quot;,\n   146\t        \&quot;children\&quot;: [\n   147\t            {\n   148\t                \&quot;type\&quot;: \&quot;portfolio\&quot;,\n   149\t                \&quot;name\&quot;: \&quot;ws_sub_PPM\&quot;,\n   150\t                \&quot;children\&quot;: [\n   151\t                    {\n   152\t                        \&quot;type\&quot;: \&quot;program\&quot;,\n   153\t                        \&quot;name\&quot;: \&quot;ws_sub_PGM\&quot;\n   154\t                    }\n   155\t                ]\n   156\t            },\n   157\t            {\n   158\t                \&quot;type\&quot;: \&quot;program\&quot;,\n   159\t                \&quot;name\&quot;: \&quot;ws_PGM\&quot;\n   160\t            }\n   161\t        ]\n   162\t    }\n   163\t    # create tree\n   164\t    create_data(input_data)\n   165\t\n   166\t\n   167\timport threading\n   168\tfsId_list = []\n   169\tproject_list = []\n   170\tproposal_list = []\n   171\tproject_dict = {}\n   172\tproposal_dict = {}\n   173\t\n   174\tdef call_method(type_need):\n   175\t    month = \&quot;January,February,March,April,May,June,July,August,September,October,November,December\&quot;\n   176\t    if type_need == \&quot;proposal\&quot;:\n   177\t        startDate = random_choice(month) + ' ' + str(generate_year())\n   178\t        endDate = random_choice(month) + ' ' + str(generate_year('y+1'))\n   179\t        proposal_name = \&quot;ws_proposal_\&quot;+random_str(16)\n   180\t        code, data = request_in_a_function(r\&quot;/proposal/proposal_create.yaml\&quot;, \&quot;Create a proposal\&quot;,\n   181\t                                           \&quot;create proposal\&quot;,\n   182\t                                           kwargs={\&quot;$..*[?(@.token=='REQ.DESCRIPTION')].stringValue\&quot;: proposal_name,\n   183\t                                                   \&quot;$..*[?(@.token=='REQ.KNTA_PROJECT_NAME')].stringValue\&quot;: proposal_name,\n   184\t                                                   \&quot;$..*[?(@.token=='REQ.KNTA_PLAN_FINISH_DATE')].stringValue\&quot;: endDate,\n   185\t                                                   \&quot;$..*[?(@.token=='REQ.KNTA_PLAN_START_DATE')].stringValue\&quot;: startDate})\n   186\t        proposal_Id = data['ns2:request']['id']\n   187\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Get fsId by ppaId\&quot;,\n   188\t                                           f\&quot;Get fsId\&quot;,\n   189\t                                           kwargs={\&quot;fm:parentType\&quot;: \&quot;PROPOSAL\&quot;.upper(),\n   190\t                                                   \&quot;fm:id\&quot;: proposal_Id})\n   191\t        fsId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   192\t\n   193\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   194\t                                           \&quot;update financial summary with CapexOpex enabled\&quot;,\n   195\t                                           f\&quot;update financial summary with CapexOpex enabled\&quot;,\n   196\t                                           replace_info=True,\n   197\t                                           headers={\&quot;SOAPAction\&quot;: \&quot;urn:updateFinancialSummary\&quot;},\n   198\t                                           parameter=f'&lt;soapenv:Envelope xmlns:soapenv=\&quot;http://schemas.xmlsoap.org/soap/envelope/\&quot;&gt; &lt;soapenv:Header/&gt; &lt;soapenv:Body&gt; &lt;service:readFinancialSummaryResponse xmlns=\&quot;http://mercury.com/ppm/fm/1.0\&quot; xmlns:service=\&quot;http://mercury.com/ppm/fm/service/1.0\&quot; xmlns:xsi=\&quot;http://www.w3.org/2001/XMLSchema-instance\&quot;&gt; &lt;service:financialSummary&gt; &lt;id&gt;{fsId}&lt;/id&gt; &lt;name&gt;{proposal_name}&lt;/name&gt; &lt;parent&gt; &lt;parentType&gt;PROPOSAL&lt;/parentType&gt; &lt;parentIdentifier&gt; &lt;id&gt;{proposal_Id}&lt;/id&gt; &lt;name&gt;{proposal_name}&lt;/name&gt; &lt;/parentIdentifier&gt; &lt;/parent&gt; &lt;localCurrencyCode&gt;USD&lt;/localCurrencyCode&gt; &lt;baseCurrencyCode&gt;USD&lt;/baseCurrencyCode&gt; &lt;approvedBudgets/&gt; &lt;forecastActual&gt; &lt;isCapexOpexEnabled&gt;true&lt;/isCapexOpexEnabled&gt; &lt;actualRollupCode&gt;MANUAL&lt;/actualRollupCode&gt; &lt;lines&gt; &lt;line&gt; &lt;expenseType&gt;Capital&lt;/expenseType&gt; &lt;laborType&gt;Labor&lt;/laborType&gt; &lt;category&gt;Contractor&lt;/category&gt; &lt;syncSourceCode&gt;NO_SYNC&lt;/syncSourceCode&gt; &lt;editable&gt;true&lt;/editable&gt; &lt;cells&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-01-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-02-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-03-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-04-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-05-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-06-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-07-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-08-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-09-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-10-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-11-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-12-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;/cells&gt; &lt;userData/&gt; &lt;/line&gt; &lt;line&gt; &lt;expenseType&gt;Operating&lt;/expenseType&gt; &lt;laborType&gt;Labor&lt;/laborType&gt; &lt;category&gt;Employee&lt;/category&gt; &lt;syncSourceCode&gt;NO_SYNC&lt;/syncSourceCode&gt; &lt;editable&gt;true&lt;/editable&gt; &lt;cells&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-01-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-02-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-03-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-04-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-05-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-06-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-07-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-08-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-09-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-10-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-11-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;cell&gt; &lt;period&gt; &lt;periodStartDate&gt;2023-12-01&lt;/periodStartDate&gt; &lt;periodType&gt;MONTH&lt;/periodType&gt; &lt;/period&gt; &lt;actualValueBSE&gt;300&lt;/actualValueBSE&gt; &lt;actualValueLCL&gt;300&lt;/actualValueLCL&gt; &lt;planValueBSE&gt;1000&lt;/planValueBSE&gt; &lt;planValueLCL&gt;1000&lt;/planValueLCL&gt; &lt;/cell&gt; &lt;/cells&gt; &lt;userData/&gt; &lt;/line&gt; &lt;/lines&gt; &lt;userData/&gt; &lt;/forecastActual&gt; &lt;snapshots/&gt; &lt;npv&gt;-24000.0&lt;/npv&gt; &lt;tnr&gt;-24000.0&lt;/tnr&gt; &lt;/service:financialSummary&gt; &lt;/service:readFinancialSummaryResponse&gt; &lt;/soapenv:Body&gt;')\n   199\t\n   200\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create proposal staffing profile\&quot;,\n   201\t                                           f\&quot;create proposal staffing profile\&quot;,\n   202\t                                           kwargs={\&quot;ns1:name\&quot;: proposal_name,\n   203\t                                                   \&quot;ns1:id\&quot;: proposal_Id,\n   204\t                                                   \&quot;ns1:plannedStartPeriodFullName\&quot;: startDate,\n   205\t                                                   \&quot;ns1:plannedFinishPeriodFullName\&quot;: endDate})\n   206\t        staffingProfileId = SoapParser().get_first_element_body_by_name(data, \&quot;staffingProfileId\&quot;)\n   207\t        fsId_list.append({\&quot;fsId\&quot;: fsId, \&quot;id\&quot;: proposal_Id, \&quot;requestId\&quot;: proposal_Id})\n   208\t\n   209\t        proposal_list.append({\&quot;name\&quot;: proposal_name, \&quot;id\&quot;: proposal_Id, \&quot;fsid\&quot;: fsId, \&quot;spid\&quot;: staffingProfileId, \&quot;startDate\&quot;: startDate, \&quot;endDate\&quot;: endDate})\n   210\t\n   211\t    elif type_need == \&quot;project\&quot;:\n   212\t\n   213\t        project_name = \&quot;ws_project_\&quot;+random_str(16)\n   214\t        startDate = random_choice(month) + ' ' + str(generate_year())\n   215\t        endDate = random_choice(month) + ' ' + str(generate_year('y+1'))\n   216\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create a project by soap\&quot;,\n   217\t                                           \&quot;create project\&quot;,\n   218\t                                           kwargs={\n   219\t                                               \&quot;pm:plannedStartPeriodFullName\&quot;: startDate,\n   220\t                                               \&quot;pm:projectName\&quot;: project_name,\n   221\t                                               \&quot;pm:plannedFinishPeriodFullName\&quot;: endDate,\n   222\t                                           })\n   223\t        requestId = SoapParser().get_first_element_body_by_name(data, \&quot;requestId\&quot;)\n   224\t        projectId = SoapParser().get_first_element_body_by_name(data, \&quot;projectId\&quot;)\n   225\t        # setattr(GlobalData.local_data.namespace, f\&quot;GD_projectId\&quot;, projectId)\n   226\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;Get fsId by ppaId\&quot;,\n   227\t                                           f\&quot;Get fsId\&quot;,\n   228\t                                           kwargs={\&quot;fm:parentType\&quot;: \&quot;PROJECT\&quot;.upper(),\n   229\t                                                   \&quot;fm:id\&quot;: projectId})\n   230\t\n   231\t        fsId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   232\t\n   233\t        # setattr(GlobalData.local_data.namespace, f\&quot;GD_projectfsid\&quot;, fsId)\n   234\t\n   235\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   236\t                                           \&quot;create financial summary forecastActual\&quot;,\n   237\t                                           f\&quot;create financial summary forecastActual\&quot;,\n   238\t                                           new_path=f\&quot;/itg/rest2/fs/{fsId}/forecastActual?fiscalYearId={periodId}\&quot;,\n   239\t                                           kwargs={\&quot;$..cells\&quot;: cellsData})\n   240\t\n   241\t        fsId_list.append({\&quot;fsId\&quot;: fsId, \&quot;id\&quot;: projectId, \&quot;requestId\&quot;: requestId})\n   242\t        # staffing profile\n   243\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create project staffing profile\&quot;,\n   244\t                                           f\&quot;create project staffing profile\&quot;,\n   245\t                                           kwargs={\&quot;ns1:name\&quot;: project_name,\n   246\t                                                   \&quot;ns1:id\&quot;: projectId,\n   247\t                                                   \&quot;ns1:plannedStartPeriodFullName\&quot;: startDate,\n   248\t                                                   \&quot;ns1:plannedFinishPeriodFullName\&quot;: endDate})\n   249\t        staffingProfileId = SoapParser().get_first_element_body_by_name(data, \&quot;staffingProfileId\&quot;)\n   250\t        print(\&quot;add profile\&quot;)\n   251\t\n   252\t        project_list.append({\&quot;name\&quot;: project_name, \&quot;id\&quot;: projectId, \&quot;fsid\&quot;: fsId, \&quot;spid\&quot;: staffingProfileId, \&quot;startDate\&quot;: startDate, \&quot;endDate\&quot;: endDate})\n   253\t\n   254\tdef add_position_and_fs():\n   255\t    list_all = project_list + proposal_list\n   256\t    for item in list_all:\n   257\t        formatted_end_date = convert_month_to_date(item[\&quot;endDate\&quot;], is_end_time=False)\n   258\t        formatted_start_date = convert_month_to_date(item[\&quot;startDate\&quot;])\n   259\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;add position\&quot;,\n   260\t                                           \&quot;add position\&quot;,\n   261\t                                           kwargs={\&quot;$..staffingProfile.id\&quot;: item[\&quot;spid\&quot;],\n   262\t                                                   \&quot;$..forecasts[?(@.type=='FTE')].startDate\&quot;:formatted_start_date,\n   263\t                                                   \&quot;$..forecasts[?(@.type=='FTE')].finishDate\&quot;:formatted_end_date})\n   264\t\n   265\tdef add_content(portfolioId, ppa=None):\n   266\t\n   267\t    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   268\t                                       \&quot;add content through candidate\&quot;,\n   269\t                                       f\&quot;add content through candidate\&quot;,\n   270\t                                       new_path=f\&quot;/itg/rest2/portfolios/{str(portfolioId)}/backlogs/candidates\&quot;,\n   271\t                                       ppas=[item[\&quot;fsId\&quot;] for item in ppa] if ppa else [])\n   272\t    logger.debug(f\&quot;add [{ppa}] to {portfolioId}\&quot;)\n   273\t\n   274\tdef add_to_program(programId, ppa=None):\n   275\t\n   276\t    id_list = [str(item['requestId']) for item in ppa]\n   277\t    # body = \&quot;&amp;\&quot;.join(f\&quot;requestId={request_id}\&quot; for request_id in id_list)\n   278\t    for i in id_list:\n   279\t        code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;,\n   280\t                                           \&quot;add ppas to program\&quot;,\n   281\t                                           f\&quot;add ppas to program\&quot;,\n   282\t                                           new_path=f\&quot;/itg/rest2/program/{programId}/content/{i}\&quot;)\n   283\t        logger.debug(f\&quot;add [{ppa}] to {programId}\&quot;)\n   284\t\n   285\tdef create_role_and_resource():\n   286\t    name = \&quot;ws_rolo_\&quot;+random_str(16)\n   287\t    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create role with role name\&quot;,\n   288\t                                       f\&quot;create role with role name\&quot;,\n   289\t                                       kwargs={\&quot;ns1:name\&quot;: name})\n   290\t    roleId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   291\t    setattr(GlobalData.local_data.namespace, f\&quot;GD_role_id\&quot;, roleId)\n   292\t\n   293\t    # GlobalData.local_data.namespace.GD_role_id = roleId\n   294\t    code, data = request_in_a_function(r\&quot;/Portfolio/portfolio_api.yaml\&quot;, \&quot;create resource pool\&quot;,\n   295\t                                       f\&quot;create resource pool\&quot;)\n   296\t    poolId = SoapParser().get_first_element_body_by_name(data, \&quot;id\&quot;)\n   297\t    setattr(GlobalData.local_data.namespace, f\&quot;GD_pool_id\&quot;, poolId)\n   298\t    # GlobalData.local_data.namespace.GD_pool_id = poolId\n   299\t    # add position\n   300\t\n   301\t\n   302\tdef thread(n):\n   303\t    threads = []\n   304\t    for i in range(0, n):  # n 为并发数\n   305\t        t = threading.Thread(target=call_method, args=(\&quot;proposal\&quot;,))\n   306\t        t1 = threading.Thread(target=call_method, args=(\&quot;project\&quot;,))\n   307\t        # 针对函数创建线程，target为调用的并发函数，args为调用函数的参数，该参数必须为数组，所以这里加了逗号，如果不加就不是数组，运行会报错\n   308\t        threads.append(t)  # 添加线程到线程组\n   309\t        threads.append(t1)\n   310\t    print(threads)\n   311\t\n   312\t    for t in threads:\n   313\t        t.start()  # 开启线程\n   314\t    for t in threads:\n   315\t        t.join()  # 等待所有线程终止\n   316\t\n   317\tdef get_global_defaultRegion():\n   318\t    from comm.unit.GlobalVariable import GlobalData\n   319\t    from comm.unit.apiMethod import get\n   320\t    response, res = get(headers={}, address=AC[PROJECT_NAME][\&quot;host\&quot;] + \&quot;/itg/rest2/pm/projects/region/default\&quot;,\n   321\t                        data=None,\n   322\t                        downloadName=None, timeout=8, cookies=None, auth=(\&quot;admin\&quot;, \&quot;admin\&quot;))\n   323\t\n   324\t    GlobalData.local_data.namespace.GD_global_defaultRegion_id = jsonpath.jsonpath(res, \&quot;$..id\&quot;)[0]\n   325\t    GlobalData.local_data.namespace.GD_global_defaultRegion_name = jsonpath.jsonpath(res, \&quot;$..name\&quot;)[0]\n   326\t\n   327\t\n   328\tdef split_list_randomly(lst, num_parts):\n   329\t    random.shuffle(lst)  # 随机打乱列表中的元素\n   330\t    sublist_size = len(lst) // num_parts  # 每个子列表的大小\n   331\t    remainder = len(lst) % num_parts  # 列表元素不能整除时的余数\n   332\t\n   333\t    result = []\n   334\t    start = 0\n   335\t    for i in range(num_parts):\n   336\t        sublist = lst[start:start+sublist_size]  # 取出一个子列表\n   337\t        result.append(sublist)  # 将子列表添加到结果中\n   338\t        start += sublist_size  # 更新下一个子列表的起始位置\n   339\t\n   340\t    # 将余数中的元素依次添加到子列表中，保证元素不重复\n   341\t    for i in range(remainder):\n   342\t        result[i].append(lst[start+i])\n   343\t\n   344\t    return result\n   345\t\n   346\t\n   347\t\n   348\tif __name__ == '__main__':\n   349\t    get_global_defaultRegion()\n   350\t    create_role_and_resource()\n   351\t    # # query period ids\n   352\t    periodList = Database().query(\&quot;ppm_fiscal_periods\&quot;, [{\&quot;column\&quot;: \&quot;period_type\&quot;, \&quot;op\&quot;: \&quot;==\&quot;, \&quot;value\&quot;: \&quot;4\&quot;},\n   353\t                                                         {\&quot;column\&quot;: \&quot;(TRUNC(start_date)\&quot;, \&quot;op\&quot;: \&quot;&gt;=\&quot;,\n   354\t                                                          \&quot;value\&quot;: f\&quot;TO_DATE('{generate_year()}-01-01', 'YYYY-MM-DD')\&quot;},\n   355\t                                                         {\&quot;column\&quot;: \&quot;(TRUNC(end_date)\&quot;, \&quot;op\&quot;: \&quot;&gt;=\&quot;,\n   356\t                                                          \&quot;value\&quot;: f\&quot;TO_DATE('{generate_year()}-12-31', 'YYYY-MM-DD')\&quot;}],\n   357\t                                  [\&quot;fiscal_period_id\&quot;])\n   358\t    cellsData = [{\&quot;periodId\&quot;: item[\&quot;fiscal_period_id\&quot;], \&quot;localPlanValue\&quot;: 1000, \&quot;localActualValue\&quot;: 2000} for item in\n   359\t                 periodList]\n   360\t\n   361\t    # query year period id\n   362\t    periodId = Database().query(\&quot;ppm_fiscal_periods\&quot;, [{\&quot;column\&quot;: \&quot;period_type\&quot;, \&quot;op\&quot;: \&quot;==\&quot;, \&quot;value\&quot;: \&quot;6\&quot;},\n   363\t                                                       {\&quot;column\&quot;: \&quot;long_name\&quot;, \&quot;op\&quot;: \&quot;==\&quot;,\n   364\t                                                        \&quot;value\&quot;: f\&quot;{generate_year()}\&quot;}],\n   365\t                                [\&quot;fiscal_period_id\&quot;])[0][\&quot;fiscal_period_id\&quot;]\n   366\t\n   367\t    thread(2)\n   368\t    batch_create_data()\n   369\t    # 将ppa随机分配至三个地方\n   370\t    list_res = split_list_randomly(fsId_list, 3)\n   371\t    top_portfolioId = getattr(GlobalData.local_data.namespace, \&quot;GD_ws_TOP_ADM_id\&quot;)\n   372\t    add_content(top_portfolioId, list_res[0])\n   373\t    sub_portfolioId = getattr(GlobalData.local_data.namespace, \&quot;GD_ws_sub_PPM_id\&quot;)\n   374\t    add_content(sub_portfolioId, list_res[2])\n   375\t    programId_tree = getattr(GlobalData.local_data.namespace, \&quot;GD_ws_PGM_id\&quot;)\n   376\t    add_to_program(programId_tree, list_res[1])\n   377\t\n   378\t    add_position_and_fs()\n   379\t\n   380\t\n   381\t\nTotal lines in file: 381\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;2488bf40-d926-46bc-989d-d02a645be18c;toolu_vrtx_012Qt5MBNbgE2rn4kKJrJg95&quot;:{&quot;requestId&quot;:&quot;2488bf40-d926-46bc-989d-d02a645be18c&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_012Qt5MBNbgE2rn4kKJrJg95&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on startup.py:\n     1\t# -*- coding:utf-8 -*-\n     2\t# @File    : startup.py\n     3\timport os\n     4\timport re\n     5\timport sys\n     6\t\n     7\timport jsonpath\n     8\timport pytest\n     9\tfrom comm.script.writeLogs import logger\n    10\t\n    11\t\n    12\tif __name__ == '__main__':\n    13\t\n    14\t    from comm.script import writeCasev2\n    15\t    from config import *\n    16\t\n    17\t    if RC['auto_switch'] == 3:\n    18\t        logger.info(\&quot;According to interface capture data, automatically generate test cases and test scripts, but do not run tests!\&quot;)\n    19\t        writeCasev2.write_case(DATA_DIR, auto_yaml=True)\n    20\t        sys.exit(0)\n    21\t\n    22\t    elif RC['auto_switch'] == 2:\n    23\t        logger.info(\&quot;According to the interface capture data, automatically generate test cases and test scripts, and then run the test!\&quot;)\n    24\t        writeCasev2.write_case(DATA_DIR, auto_yaml=True)\n    25\t\n    26\t    elif RC['auto_switch'] == 1:\n    27\t\n    28\t        if not os.path.exists(RC['scan_dir']):\n    29\t            RC['scan_dir'] = PAGE_DIR\n    30\t        logger.info(\&quot;Automatically generate test scripts based on hand-written use cases, and then run the tests!\&quot;)\n    31\t        writeCasev2.write_case(RC['scan_dir'], auto_yaml=False)\n    32\t\n    33\t    else:\n    34\t        logger.info(\&quot;Do not enable automatic test case generation function, will run the test directly!\&quot;)\n    35\t\n    36\t    args_list = ['-vs', TEST_DIR,\n    37\t                 '-n', str(RC['process']),\n    38\t                 '-m', 'not {}'.format(\&quot;tag\&quot;),\n    39\t                 '--reruns', str(RC['reruns']),\n    40\t                 '--maxfail', str(RC['maxfail']),\n    41\t                 '--alluredir', REPORT_DIR+'/xml',\n    42\t                 '--clean-alluredir']\n    43\t\n    44\t    if RC['pattern']:\n    45\t        args_list += ['-k ' + str(RC['pattern'])]\n    46\t    try:\n    47\t        # run script\n    48\t        test_result = pytest.main(args_list)\n    49\t\n    50\t        # report\n    51\t        cmd = 'allure generate --clean %s -o %s ' % (REPORT_DIR+'/xml', REPORT_DIR+'/html')\n    52\t        os.system(cmd)\n    53\t    except Exception as e:\n    54\t        raise e\n    55\t\n    56\t\nTotal lines in file: 56\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;0a27fb06-2637-4c64-83ec-b0e9457c385f;toolu_vrtx_01V2RkPXpmsfW5VXjwj4wfKu&quot;:{&quot;requestId&quot;:&quot;0a27fb06-2637-4c64-83ec-b0e9457c385f&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01V2RkPXpmsfW5VXjwj4wfKu&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on requirements.txt:\n     1\tallure-pytest==2.9.43\n     2\tallure-python-commons==2.9.43\n     3\tatomicwrites==1.4.0\n     4\tattrs==21.2.0\n     5\tcertifi==2021.5.30\n     6\tcharset-normalizer==2.0.6\n     7\tcolorama==0.4.4\n     8\tdecorator==5.1.0\n     9\telasticsearch==7.15.0\n    10\texecnet==1.9.0\n    11\tFaker~=8.8.1\n    12\tgreenlet==1.1.1\n    13\tgssapi==1.7.0\n    14\tidna==3.2\n    15\tiniconfig==1.1.1\n    16\tjsonpath==0.82\n    17\tmore-itertools==8.10.0\n    18\tmulti-key-dict==2.0.3\n    19\tpackaging==21.0\n    20\tpbr==5.6.0\n    21\tphoenixdb~=1.0.1\n    22\tpluggy==1.0.0\n    23\tprotobuf==3.18.0\n    24\tpy==1.10.0\n    25\tPyHamcrest==2.0.2\n    26\tPyMySQL~=0.9.3\n    27\tpyparsing==2.4.7\n    28\tpytest==6.2.5\n    29\tpytest-forked==1.3.0\n    30\tpytest-metadata==1.11.0\n    31\tpytest-ordering==0.6\n    32\tpytest-rerunfailures==10.2\n    33\tpytest-xdist==2.4.0\n    34\tpython-dateutil~=2.8.1\n    35\tpython-jenkins==1.7.0\n    36\tPyYAML==5.4.1\n    37\tredis==3.5.3\n    38\trequests~=2.22.0\n    39\trequests-gssapi==1.2.3\n    40\trequests-toolbelt==0.9.1\n    41\tsimplejson~=3.17.2\n    42\tsix==1.16.0\n    43\tSQLAlchemy==1.4.25\n    44\ttext-unidecode==1.3\n    45\ttoml==0.10.2\n    46\turllib3==1.26.7\n    47\tFlask~=2.0.2\n    48\tconfig~=0.5.0.post0\n    49\tpymssql~=2.2.1\n    50\tconfigparser~=5.0.0\n    51\txmltodict~=0.13.0\n    52\tpandas~=1.3.5\n    53\tpyodbc~=4.0.39\n    54\tpsycopg2~=2.9.5\n    55\tchardet~=3.0.4\nTotal lines in file: 55\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;dc17424d-ca32-4b0c-a452-636f3919e596;toolu_vrtx_015sxxgvtqBQdqioxp5ug23F&quot;:{&quot;requestId&quot;:&quot;dc17424d-ca32-4b0c-a452-636f3919e596&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_015sxxgvtqBQdqioxp5ug23F&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in PyDemo/page/Portfolio, excluding hidden items:\nPyDemo/page/Portfolio/PortfolioContent\nPyDemo/page/Portfolio/PortfolioContent/test_content_add.yaml\nPyDemo/page/Portfolio/portfolio_api.yaml\nPyDemo/page/Portfolio/test_portfolio_create.yaml\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;9a991cbc-b29c-4391-8a8f-9721c07c1c6c;toolu_vrtx_019yP6WPpxQPbZy5xmY2TAVj&quot;:{&quot;requestId&quot;:&quot;9a991cbc-b29c-4391-8a8f-9721c07c1c6c&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_019yP6WPpxQPbZy5xmY2TAVj&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the result of running `cat -n` on PyDemo/page/Portfolio/test_portfolio_create.yaml:\n     1\ttest_info:\n     2\t  epic: Portfolio\n     3\t  feature: PortfolioCreate\n     4\t  story: PortfolioCreate\n     5\t  host: ${host}\n     6\t  method: POST\n     7\t  address: /itg/rest2/portfolios\n     8\t  mime_type: application/json\n     9\t  headers: {}\n    10\t  auth: ${AUTH}\n    11\t  timeout: ${timeout}\n    12\t  file: false\n    13\t  cookies: false\n    14\t  setup:\n    15\t    premise: false\n    16\t    function: false\n    17\t  clean_up:\n    18\ttest_case:\n    19\t- summary: Create a portfolio\n    20\t  skip:\n    21\t  title: Create a portfolio by rest\n    22\t  tag: TAG01\n    23\t  describe:\n    24\t    Description:\n    25\t      - step1:prepare a portfolio with sub-portfolio\n    26\t      - step2:parent portfolio should add a bg with private KPI\n    27\t      - step3:creat a bg with parent bg\n    28\t    FunctionDesigner: Liu Hang\n    29\t    Author: Xuanyu Liu\n    30\t    CreateDate: 8/5/2023'\n    31\t  issue: create scenario 01\n    32\t  premise: # [path key description]\n    33\t#    - /UserManagement/SecurityGroup/test_security_group_add.yaml\n    34\t#    - create security group with accessGrants\n    35\t#    - 创建安全组\n    36\t  setup_function:\n    37\t#    func_create_user_with_specified_license_and_security_group:\n    38\t#      licenses: [6,2]\n    39\t#      password: Asdf1@34\n    40\t#      securityGroups:\n    41\t#        - ${id}\n    42\t  auth:\n    43\t  parameter:\n    44\t    name: ws_portfolio_$GenTimeStamp()\n    45\t    managers:\n    46\t      - userId: ${ADMIN_USER_ID}\n    47\t        fullName: ${ADMIN_FULLNAME}\n    48\t    portfolioType:\n    49\t      id: -1\n    50\t  check_body:\n    51\t    check_type: check_json\n    52\t    expected_code: 200\n    53\t    expected_result:\n    54\t        - [\&quot;eq\&quot;, \&quot;$..name\&quot;, '${name}']\n    55\t        - [\&quot;gt\&quot;, \&quot;$..id\&quot;, 0]\n    56\t  clean_up:\n    57\t#    func_add_security_group_to_user:\n    58\t#      securityGroupId: ${GD_sgId}\n    59\t#      userId: ${GD_userId}\n    60\t- summary: Create a portfolio and add a sub-portfolio\n    61\t  skip: true\n    62\t  title: Create a portfolio and add a sub-portfolio\n    63\t  describe:\n    64\t    Description:\n    65\t      - step1:prepare a portfolio with sub-portfolio\n    66\t      - step2:parent portfolio should add a bg with private KPI\n    67\t      - step3:creat a bg with parent bg\n    68\t    FunctionDesigner: Liu Hang\n    69\t    Author: Xuanyu Liu\n    70\t    CreateDate: 8/5/2023'\n    71\t  tag: TAG01\n    72\t  issue: create scenario 01\n    73\t  premise: # [path key description]\n    74\t    - /Portfolio/test_portfolio_create.yaml\n    75\t    - Create a portfolio\n    76\t    - 创建一个portfolio以供后续添加子portfolio\n    77\t  setup_function:\n    78\t#    func_create_user_with_specified_license_and_security_group:\n    79\t#      licenses: [6,2]\n    80\t#      password: Asdf1@34\n    81\t#      securityGroups:\n    82\t#        - ${id}\n    83\t  auth:\n    84\t  parameter:\n    85\t    name: ws_portfolio_$GenTimeStamp()\n    86\t    managers:\n    87\t      - userId: ${ADMIN_USER_ID}\n    88\t        fullName: ${ADMIN_FULLNAME}\n    89\t    portfolioType:\n    90\t      id: -1\n    91\t  check_body:\n    92\t    check_type: check_json\n    93\t    expected_code: 200\n    94\t    expected_result:\n    95\t        - [\&quot;eq\&quot;, \&quot;$..name\&quot;, '${name}']\n    96\t        - [\&quot;gt\&quot;, \&quot;$..id\&quot;, 0]\n    97\t  clean_up:\n    98\t\nTotal lines in file: 98\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;f27d6248-c95d-43f4-96f2-65abcf1b5c19;toolu_vrtx_015zeSczb7mA3xDobE69JNcB&quot;:{&quot;requestId&quot;:&quot;f27d6248-c95d-43f4-96f2-65abcf1b5c19&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_015zeSczb7mA3xDobE69JNcB&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in comm, excluding hidden items:\ncomm/__init__.py\ncomm/__pycache__\ncomm/__pycache__/__init__.cpython-37.pyc\ncomm/script\ncomm/script/__init__.py\ncomm/script/__pycache__\ncomm/script/writeCase.py\ncomm/script/writeCaseYml.py\ncomm/script/writeCasev2.py\ncomm/script/writeLogs.py\ncomm/unit\ncomm/unit/GlobalVariable.py\ncomm/unit/__init__.py\ncomm/unit/__pycache__\ncomm/unit/apiMethod.py\ncomm/unit/apiSend.py\ncomm/unit/checkResult.py\ncomm/unit/initializeFunc.py\ncomm/unit/initializePremise.py\ncomm/unit/initializePremiseData.py\ncomm/unit/initializePremiseData1.py\ncomm/unit/queryDatabase.py\ncomm/unit/readRelevance.py\ncomm/unit/replaceRelevance.py\ncomm/utils\ncomm/utils/SoapParser.py\ncomm/utils/__init__.py\ncomm/utils/__pycache__\ncomm/utils/allureHandle.py\ncomm/utils/databaseExecute.py\ncomm/utils/jsonSearch.py\ncomm/utils/randomly.py\ncomm/utils/readConf.py\ncomm/utils/readJson.py\ncomm/utils/readYaml.py\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;ed255a73-2c65-4736-adf7-7508dee4b596;toolu_vrtx_01N56giNa3qrreWLSzTMuzxJ&quot;:{&quot;requestId&quot;:&quot;ed255a73-2c65-4736-adf7-7508dee4b596&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01N56giNa3qrreWLSzTMuzxJ&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Note:\nView range expanded to meet minimum size of 500 lines. End line adjusted to last line of file (172).\n\nHere's the result of running `cat -n` on comm/unit/apiSend.py:\n     1\t\n     2\t# @File    : apiSend.py\n     3\t# ***********************\n     4\timport json\n     5\tfrom comm.script.writeLogs import logger\n     6\timport allure\n     7\timport time\n     8\tfrom config import INTERVAL, PROXY, PROXIES\n     9\tfrom comm.unit import apiMethod\n    10\t\n    11\t\n    12\tdef send_request(test_info, case_data, CallFunctionDes=None):\n    13\t    \&quot;\&quot;\&quot;\n    14\t    Encapsulation request\n    15\t    :param test_info: test information\n    16\t    :param case_data: use case data\n    17\t    :param CallFunctionDes: current behavior description\n    18\t    :return:\n    19\t    \&quot;\&quot;\&quot;\n    20\t    try:\n    21\t        address = case_data.get(\&quot;address\&quot;, False)\n    22\t        host = test_info[\&quot;host\&quot;]\n    23\t        method = case_data[\&quot;method\&quot;].upper() if case_data.get(\&quot;method\&quot;, False) else test_info[\&quot;method\&quot;].upper()\n    24\t        address = case_data[\&quot;address\&quot;] if address else test_info[\&quot;address\&quot;]\n    25\t        mime_type = case_data[\&quot;mime_type\&quot;] if case_data.get(\&quot;mime_type\&quot;, False) else test_info[\&quot;mime_type\&quot;]\n    26\t        headers = test_info[\&quot;headers\&quot;]\n    27\t        cookies = test_info[\&quot;cookies\&quot;]\n    28\t        file = test_info[\&quot;file\&quot;]\n    29\t        timeout = test_info[\&quot;timeout\&quot;]\n    30\t        summary = case_data[\&quot;summary\&quot;]\n    31\t        parameter = case_data[\&quot;parameter\&quot;]\n    32\t        auth = tuple(case_data[\&quot;auth\&quot;]) if case_data[\&quot;auth\&quot;] else tuple(test_info[\&quot;auth\&quot;])\n    33\t        download_name = case_data[\&quot;download_name\&quot;] if 'download_name' in case_data.keys() else None\n    34\t        if PROXY:\n    35\t            proxies = PROXIES\n    36\t    except Exception as e:\n    37\t        raise KeyError(f'Failed to obtain basic information about the case:{e}')\n    38\t\n    39\t    request_url = host + address\n    40\t    logger.info(\&quot;=\&quot; * 150)\n    41\t    logger.info(f\&quot;Host：{str(host)}\&quot;)\n    42\t    logger.info(f\&quot;Path：{str(address)}\&quot;)\n    43\t    logger.info(f\&quot;Headers: {str(headers)}\&quot;)\n    44\t    logger.info(f\&quot;Parameters: {str(parameter)}\&quot;)\n    45\t    step = CallFunctionDes if CallFunctionDes else case_data['summary']\n    46\t\n    47\t    if summary == 'save_cookies':\n    48\t        with allure.step(\&quot;Save cookies\&quot;):\n    49\t            allure.attach(name=\&quot;Host\&quot;, body=str(host))\n    50\t            allure.attach(name=\&quot;Path\&quot;, body=str(address))\n    51\t            allure.attach(name=\&quot;Headers\&quot;, body=str(headers))\n    52\t            allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n    53\t            apiMethod.save_cookie(headers=headers,\n    54\t                                  address=request_url,\n    55\t                                  mime_type=mime_type,\n    56\t                                  data=parameter,\n    57\t                                  cookies=cookies,\n    58\t                                  timeout=timeout)\n    59\t    if method == 'POST':\n    60\t        logger.info(\&quot;Request method: POST\&quot;)\n    61\t        if file:\n    62\t            result = apiMethod.post(headers=headers,\n    63\t                                    address=request_url,\n    64\t                                    mime_type=mime_type,\n    65\t                                    files=case_data[\&quot;file\&quot;],\n    66\t                                    data=parameter,\n    67\t                                    auth=auth,\n    68\t                                    cookies=cookies,\n    69\t                                    proxy=proxies,\n    70\t                                    timeout=timeout)\n    71\t            with allure.step(f\&quot;POST upload file[{step}]\&quot;):\n    72\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n    73\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n    74\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n    75\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n    76\t                allure.attach(name=\&quot;Uploaded file\&quot;, body=str(case_data[\&quot;file\&quot;]))\n    77\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n    78\t                allure.attach(name=\&quot;Response\&quot;, body=str(f\&quot;status_code:{result[0]}\&quot;+\&quot; result:\&quot;+result[1]))\n    79\t        else:\n    80\t            result = apiMethod.post(headers=headers,\n    81\t                                    address=request_url,\n    82\t                                    mime_type=mime_type,\n    83\t                                    data=parameter,\n    84\t                                    auth=auth,\n    85\t                                    proxy=proxies,\n    86\t                                    cookies=cookies,\n    87\t                                    timeout=timeout)\n    88\t            with allure.step(f\&quot;POST [{step}]\&quot;):\n    89\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n    90\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n    91\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n    92\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n    93\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n    94\t                allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot;+str(result[1]))\n    95\t            logger.info(\&quot;Request result: %s\&quot; % str(result))\n    96\t    elif method == 'GET':\n    97\t        logger.info(\&quot;Request method: GET\&quot;)\n    98\t        result = apiMethod.get(headers=headers,\n    99\t                               address=request_url,\n   100\t                               data=parameter,\n   101\t                               cookies=cookies,\n   102\t                               auth=auth,\n   103\t                               proxy=proxies,\n   104\t                               timeout=timeout,\n   105\t                               downloadName=download_name)\n   106\t\n   107\t        with allure.step(f\&quot;GET [{step}]\&quot;):\n   108\t            allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   109\t            allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   110\t            allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   111\t            allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   112\t            allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   113\t            allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   114\t\n   115\t    elif method == 'PUT':\n   116\t        logger.info(\&quot;Request method: PUT\&quot;)\n   117\t        if file:\n   118\t            result = apiMethod.put(headers=headers,\n   119\t                                   address=request_url,\n   120\t                                   mime_type=mime_type,\n   121\t                                   files=parameter,\n   122\t                                   auth=auth,\n   123\t                                   proxy=proxies,\n   124\t                                   cookies=cookies,\n   125\t                                   timeout=timeout)\n   126\t            with allure.step(f\&quot;PUT uploaded file[{step}]\&quot;):\n   127\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   128\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   129\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   130\t                allure.attach(name=\&quot;Uploaded file\&quot;, body=str(case_data[\&quot;file\&quot;]))\n   131\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   132\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   133\t                allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   134\t\n   135\t        else:\n   136\t            result = apiMethod.put(headers=headers,\n   137\t                                   address=request_url,\n   138\t                                   mime_type=mime_type,\n   139\t                                   data=parameter,\n   140\t                                   auth=auth,\n   141\t                                   proxy=proxies,\n   142\t                                   cookies=cookies,\n   143\t                                   timeout=timeout)\n   144\t            with allure.step(f\&quot;PUT [{step}]\&quot;):\n   145\t                allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   146\t                allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   147\t                allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   148\t                allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   149\t                allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   150\t                allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   151\t    elif method == 'DELETE':\n   152\t        logger.info(\&quot;Request method: DELETE\&quot;)\n   153\t        result = apiMethod.delete(headers=headers,\n   154\t                                  address=request_url,\n   155\t                                  data=parameter,\n   156\t                                  auth=auth,\n   157\t                                  proxy=proxies,\n   158\t                                  cookies=cookies,\n   159\t                                  timeout=timeout)\n   160\t        with allure.step(f\&quot;DELETE [{step}]\&quot;):\n   161\t            allure.attach(name=\&quot;Host\&quot;, body=str(host))\n   162\t            allure.attach(name=\&quot;Path\&quot;, body=str(address))\n   163\t            allure.attach(name=\&quot;Headers\&quot;, body=str(result[0].request.headers))\n   164\t            allure.attach(name=\&quot;Parameters\&quot;, body=str(parameter))\n   165\t            allure.attach(name=\&quot;Response headers\&quot;, body=str(result[0].headers))\n   166\t            allure.attach(name=\&quot;Response\&quot;, body=f\&quot;status_code:{result[0].status_code} result: \&quot; + str(result[1]))\n   167\t    else:\n   168\t        result = {\&quot;code\&quot;: None, \&quot;data\&quot;: None}\n   169\t    logger.info(\&quot;Request result: %s\&quot; % str(result))\n   170\t    time.sleep(INTERVAL)\n   171\t    return result\n   172\t\nTotal lines in file: 172\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;55c4d9e3-e435-43c1-9577-a3005d573218;toolu_vrtx_01TKZV9obwJ6QyYK9k8CVWMh&quot;:{&quot;requestId&quot;:&quot;55c4d9e3-e435-43c1-9577-a3005d573218&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_01TKZV9obwJ6QyYK9k8CVWMh&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Here's the files and directories up to 2 levels deep in PyDemo/testcase/Portfolio, excluding hidden items:\nPyDemo/testcase/Portfolio/PortfolioContent\nPyDemo/testcase/Portfolio/PortfolioContent/__pycache__\nPyDemo/testcase/Portfolio/PortfolioContent/test_content_add.py\nPyDemo/testcase/Portfolio/__pycache__\nPyDemo/testcase/Portfolio/__pycache__/test_portfolio_create.cpython-37-pytest-6.2.5.pyc\nPyDemo/testcase/Portfolio/test_portfolio_create.py\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}},&quot;0e75264d-3cd2-4c38-8c1f-3c44b844be01;toolu_vrtx_014PnAoxDFbQZiH19UCzwpqE&quot;:{&quot;requestId&quot;:&quot;0e75264d-3cd2-4c38-8c1f-3c44b844be01&quot;,&quot;toolUseId&quot;:&quot;toolu_vrtx_014PnAoxDFbQZiH19UCzwpqE&quot;,&quot;phase&quot;:5,&quot;result&quot;:{&quot;text&quot;:&quot;Note:\nView range expanded to meet minimum size of 500 lines. End line adjusted to last line of file (109).\n\nHere's the result of running `cat -n` on PyDemo/testcase/Portfolio/test_portfolio_create.py:\n     1\t# -*- coding:utf-8 -*-\n     2\t# @File    : test_PortfolioCreate.py\n     3\t# ****************************\n     4\tfrom comm.script.writeLogs import logger\n     5\timport os\n     6\timport allure\n     7\timport pytest\n     8\t\n     9\tfrom comm.unit import replaceRelevance, apiSend\n    10\tfrom comm.utils import readYaml\n    11\tfrom comm.utils.readJson import update_json\n    12\tfrom comm.utils.readYaml import read_yaml_data\n    13\tfrom comm.unit.initializePremiseData import init_premise, merge_pre_and_current_params, \\\n    14\t    process_pre_test_info, read_json, call_functions\n    15\tfrom comm.unit.apiSend import send_request\n    16\tfrom comm.unit.checkResult import check_result, check_by_request\n    17\tfrom config import PAGE_DIR\n    18\t\n    19\tcase_yaml = os.path.realpath(__file__).replace('testcase', 'page').replace('.py', '.yaml')\n    20\tcase_path = os.path.dirname(case_yaml)\n    21\tcase_dict = read_yaml_data(case_yaml)\n    22\t\n    23\t\n    24\t@allure.epic(case_dict[\&quot;test_info\&quot;][\&quot;epic\&quot;])\n    25\t@allure.feature(case_dict[\&quot;test_info\&quot;][\&quot;feature\&quot;])\n    26\t@pytest.mark.usefixtures(\&quot;class_setup_and_teardown_fixture\&quot;)\n    27\tclass TestPortfoliocreate:\n    28\t    param_value = case_dict[\&quot;test_info\&quot;]  # 定义传递给 fixture 的参数\n    29\t\n    30\t    @allure.title(\&quot;{case_data[title]}\&quot;)\n    31\t    @pytest.mark.parametrize(\&quot;case_data\&quot;, case_dict[\&quot;test_case\&quot;])\n    32\t    @allure.story(\&quot;PortfolioCreate\&quot;)\n    33\t    def test_PortfolioCreate(self, case_data):\n    34\t        des = f\&quot;\&quot;\&quot;\n    35\t        &lt;h1&gt;{case_data[\&quot;title\&quot;]}&lt;/h1&gt;\n    36\t        &lt;table style=\&quot;width:100%\&quot; border=\&quot;1\&quot;&gt;\n    37\t            &lt;tbody&gt;\n    38\t                &lt;tr&gt;\n    39\t                    &lt;th&gt;Description&lt;/th&gt;\n    40\t                    &lt;td&gt;{case_data['describe'][\&quot;Description\&quot;]}&lt;/td&gt;\n    41\t                &lt;/tr&gt;\n    42\t                &lt;tr&gt;\n    43\t                    &lt;th&gt;Function Designer&lt;/th&gt;\n    44\t                    &lt;td&gt;{case_data['describe'][\&quot;FunctionDesigner\&quot;]}&lt;/td&gt;\n    45\t                &lt;/tr&gt;\n    46\t                &lt;tr&gt;\n    47\t                    &lt;th&gt;Author&lt;/th&gt;\n    48\t                    &lt;td&gt;{case_data['describe'][\&quot;Author\&quot;]}&lt;/td&gt;\n    49\t                &lt;/tr&gt;\n    50\t                &lt;tr&gt;\n    51\t                    &lt;th&gt;Create Date&lt;/th&gt;\n    52\t                    &lt;td&gt;{case_data['describe'][\&quot;CreateDate\&quot;]}&lt;/td&gt;\n    53\t                &lt;/tr&gt;\n    54\t            &lt;/tbody&gt;\n    55\t        &lt;/table&gt;\n    56\t        \&quot;\&quot;\&quot;\n    57\t        if case_data.get('skip', False):\n    58\t            pytest.skip('This test is skipped.')\n    59\t        allure.dynamic.description_html(des)\n    60\t        allure.dynamic.tag(case_data['tag'])\n    61\t        allure.dynamic.issue(case_data['issue'])\n    62\t        # 初始化请求：执行前置接口+替换关联变量\n    63\t        test_info, case_data, relevance = init_premise(case_dict[\&quot;test_info\&quot;], case_data, case_path, self.response_data)\n    64\t        # 发送当前接口\n    65\t        res, data = send_request(test_info, case_data)\n    66\t        # 替换期待值\n    67\t        relevance = merge_pre_and_current_params(case_data[\&quot;parameter\&quot;], data, relevance, \&quot;\&quot;)\n    68\t        expected_rs = replaceRelevance.replace(case_data['check_body'], relevance)\n    69\t        case_data['check_body'] = expected_rs\n    70\t        # 校验接口返回\n    71\t        try:\n    72\t            check_result(case_data, res.status_code, data)\n    73\t            case_info_copy = case_dict[\&quot;test_info\&quot;].copy()\n    74\t            case_data_copy = case_data.copy()\n    75\t            relevance_copy = relevance\n    76\t            data_copy = data\n    77\t            check_by_request(case_info_copy, case_data_copy, data_copy, relevance_copy)\n    78\t\n    79\t        except Exception as e:\n    80\t            logger.debug(e)\n    81\t            raise e\n    82\t        finally:\n    83\t            self.res_data = data\n    84\t            self.req_data = case_data['parameter']\n    85\t            teardown_case(case_data, data, self.response_data)\n    86\t\n    87\t\n    88\t@allure.step(\&quot;teardown function\&quot;)\n    89\tdef teardown_case(case_data, response_data, relevance):\n    90\t    data = response_data\n    91\t    __relevanceMer = merge_pre_and_current_params(case_data['parameter'], data, relevance)\n    92\t    case_data[\&quot;teardown\&quot;] = replaceRelevance.replace(case_data[\&quot;teardown\&quot;], __relevanceMer)\n    93\t    if case_data[\&quot;teardown\&quot;].get('premise', False):\n    94\t        # 执行当前测试用例的数据清理操作\n    95\t        for td in case_data[\&quot;teardown\&quot;][\&quot;premise\&quot;]:\n    96\t            case_path1 = PAGE_DIR + td[0]\n    97\t            case_data1 = readYaml.read_yaml_data(case_path1)\n    98\t            case = [my_dict for my_dict in case_data1[\&quot;test_case\&quot;] if\n    99\t                    \&quot;summary\&quot; in my_dict and my_dict[\&quot;summary\&quot;] == td[1]][0]\n   100\t            test_info = update_json(case_data1['test_info'], td[3])\n   101\t            case = update_json(case, td[3])\n   102\t            test_info = process_pre_test_info(test_info, __relevanceMer)\n   103\t            parameter = read_json(case['summary'], case['parameter'], case_path1)\n   104\t            parameter = replaceRelevance.replace(parameter, __relevanceMer)\n   105\t            case['parameter'] = parameter\n   106\t            response, res = apiSend.send_request(test_info, case, td[2])\n   107\t    if case_data[\&quot;teardown\&quot;].get('function', False):\n   108\t        # 执行当前测试用例的数据清理操作\n   109\t        call_functions(**case_data[\&quot;teardown\&quot;][\&quot;function\&quot;])\nTotal lines in file: 109\n&quot;,&quot;isError&quot;:false,&quot;requestId&quot;:&quot;&quot;}}},&quot;draftExchange&quot;:{&quot;request_message&quot;:&quot;&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;}]},&quot;mentioned_items&quot;:[],&quot;status&quot;:&quot;draft&quot;},&quot;requestIds&quot;:[],&quot;isPinned&quot;:false,&quot;isShareable&quot;:true,&quot;extraData&quot;:{&quot;isAgentConversation&quot;:true,&quot;hasDirtyEdits&quot;:false},&quot;personaType&quot;:0,&quot;rootTaskUuid&quot;:&quot;2e18ee7e-797e-445b-a871-956045aa1353&quot;,&quot;draftActiveContextIds&quot;:[&quot;userGuidelines&quot;,&quot;agentMemories&quot;]},&quot;bc197f7f-72e6-4a10-a1d6-fae0ec9bb021&quot;:{&quot;id&quot;:&quot;bc197f7f-72e6-4a10-a1d6-fae0ec9bb021&quot;,&quot;createdAtIso&quot;:&quot;2025-06-18T08:41:00.037Z&quot;,&quot;lastInteractedAtIso&quot;:&quot;2025-06-18T08:41:00.037Z&quot;,&quot;chatHistory&quot;:[],&quot;feedbackStates&quot;:{},&quot;toolUseStates&quot;:{},&quot;draftExchange&quot;:{&quot;request_message&quot;:&quot;&quot;,&quot;rich_text_json_repr&quot;:{&quot;type&quot;:&quot;doc&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;paragraph&quot;}]},&quot;mentioned_items&quot;:[],&quot;status&quot;:&quot;draft&quot;},&quot;requestIds&quot;:[],&quot;isPinned&quot;:false,&quot;isShareable&quot;:false,&quot;extraData&quot;:{&quot;isAgentConversation&quot;:true,&quot;hasDirtyEdits&quot;:false},&quot;personaType&quot;:0}},&quot;agentExecutionMode&quot;:&quot;manual&quot;,&quot;isPanelCollapsed&quot;:true,&quot;displayedAnnouncements&quot;:[]}" />
      </map>
    </option>
  </component>
</project>